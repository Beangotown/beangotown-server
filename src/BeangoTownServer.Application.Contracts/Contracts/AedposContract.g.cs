// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: aedpos_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AElf.Contracts.Consensus.AEDPoS {

  /// <summary>Holder for reflection information generated from aedpos_contract.proto</summary>
  internal static partial class AedposContractReflection {

    #region Descriptor
    /// <summary>File descriptor for aedpos_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AedposContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVhZWRwb3NfY29udHJhY3QucHJvdG8SBkFFRFBvUxoSYWVsZi9vcHRpb25z",
            "LnByb3RvGg9hZWxmL2NvcmUucHJvdG8aFGF1dGhvcml0eV9pbmZvLnByb3Rv",
            "Ghtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1",
            "Zi90aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5w",
            "cm90byKNAQohSW5pdGlhbEFFbGZDb25zZW5zdXNDb250cmFjdElucHV0EhgK",
            "EGlzX3Rlcm1fc3RheV9vbmUYASABKAgSFQoNaXNfc2lkZV9jaGFpbhgCIAEo",
            "CBIWCg5wZXJpb2Rfc2Vjb25kcxgDIAEoAxIfChdtaW5lcl9pbmNyZWFzZV9p",
            "bnRlcnZhbBgEIAEoAyL5BgoQVXBkYXRlVmFsdWVJbnB1dBIdCglvdXRfdmFs",
            "dWUYASABKAsyCi5hZWxmLkhhc2gSHQoJc2lnbmF0dXJlGAIgASgLMgouYWVs",
            "Zi5IYXNoEhAKCHJvdW5kX2lkGAMgASgDEiUKEXByZXZpb3VzX2luX3ZhbHVl",
            "GAQgASgLMgouYWVsZi5IYXNoEjYKEmFjdHVhbF9taW5pbmdfdGltZRgFIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASJAocc3VwcG9zZWRfb3Jk",
            "ZXJfb2ZfbmV4dF9yb3VuZBgGIAEoBRJSChZ0dW5lX29yZGVyX2luZm9ybWF0",
            "aW9uGAcgAygLMjIuQUVEUG9TLlVwZGF0ZVZhbHVlSW5wdXQuVHVuZU9yZGVy",
            "SW5mb3JtYXRpb25FbnRyeRJHChBlbmNyeXB0ZWRfcGllY2VzGAggAygLMi0u",
            "QUVEUG9TLlVwZGF0ZVZhbHVlSW5wdXQuRW5jcnlwdGVkUGllY2VzRW50cnkS",
            "RwoQZGVjcnlwdGVkX3BpZWNlcxgJIAMoCzItLkFFRFBvUy5VcGRhdGVWYWx1",
            "ZUlucHV0LkRlY3J5cHRlZFBpZWNlc0VudHJ5EhcKD3Byb2R1Y2VkX2Jsb2Nr",
            "cxgKIAEoAxJXChltaW5lcnNfcHJldmlvdXNfaW5fdmFsdWVzGAsgAygLMjQu",
            "QUVEUG9TLlVwZGF0ZVZhbHVlSW5wdXQuTWluZXJzUHJldmlvdXNJblZhbHVl",
            "c0VudHJ5EikKIWltcGxpZWRfaXJyZXZlcnNpYmxlX2Jsb2NrX2hlaWdodBgM",
            "IAEoAxIVCg1yYW5kb21fbnVtYmVyGA0gASgMGjsKGVR1bmVPcmRlckluZm9y",
            "bWF0aW9uRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ARo2",
            "ChRFbmNyeXB0ZWRQaWVjZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAw6AjgBGjYKFERlY3J5cHRlZFBpZWNlc0VudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoDDoCOAEaSQobTWluZXJzUHJldmlvdXNJblZhbHVl",
            "c0VudHJ5EgsKA2tleRgBIAEoCRIZCgV2YWx1ZRgCIAEoCzIKLmFlbGYuSGFz",
            "aDoCOAEiHAoJTWluZXJMaXN0Eg8KB3B1YmtleXMYASADKAwiHQoKUHVia2V5",
            "TGlzdBIPCgdwdWJrZXlzGAEgAygJIm4KEFRlcm1OdW1iZXJMb29rVXASLgoD",
            "bWFwGAEgAygLMiEuQUVEUG9TLlRlcm1OdW1iZXJMb29rVXAuTWFwRW50cnka",
            "KgoITWFwRW50cnkSCwoDa2V5GAEgASgDEg0KBXZhbHVlGAIgASgDOgI4ASId",
            "CgpDYW5kaWRhdGVzEg8KB3B1YmtleXMYASADKAwi8wMKBVJvdW5kEhQKDHJv",
            "dW5kX251bWJlchgBIAEoAxJSChxyZWFsX3RpbWVfbWluZXJzX2luZm9ybWF0",
            "aW9uGAIgAygLMiwuQUVEUG9TLlJvdW5kLlJlYWxUaW1lTWluZXJzSW5mb3Jt",
            "YXRpb25FbnRyeRImCh5tYWluX2NoYWluX21pbmVyc19yb3VuZF9udW1iZXIY",
            "AyABKAMSFgoOYmxvY2tjaGFpbl9hZ2UYBCABKAMSLgomZXh0cmFfYmxvY2tf",
            "cHJvZHVjZXJfb2ZfcHJldmlvdXNfcm91bmQYBSABKAkSEwoLdGVybV9udW1i",
            "ZXIYBiABKAMSKwojY29uZmlybWVkX2lycmV2ZXJzaWJsZV9ibG9ja19oZWln",
            "aHQYByABKAMSMQopY29uZmlybWVkX2lycmV2ZXJzaWJsZV9ibG9ja19yb3Vu",
            "ZF9udW1iZXIYCCABKAMSIgoaaXNfbWluZXJfbGlzdF9qdXN0X2NoYW5nZWQY",
            "CSABKAgSHwoXcm91bmRfaWRfZm9yX3ZhbGlkYXRpb24YCiABKAMaVgoeUmVh",
            "bFRpbWVNaW5lcnNJbmZvcm1hdGlvbkVudHJ5EgsKA2tleRgBIAEoCRIjCgV2",
            "YWx1ZRgCIAEoCzIULkFFRFBvUy5NaW5lckluUm91bmQ6AjgBIoQGCgxNaW5l",
            "ckluUm91bmQSDQoFb3JkZXIYASABKAUSHwoXaXNfZXh0cmFfYmxvY2tfcHJv",
            "ZHVjZXIYAiABKAgSHAoIaW5fdmFsdWUYAyABKAsyCi5hZWxmLkhhc2gSHQoJ",
            "b3V0X3ZhbHVlGAQgASgLMgouYWVsZi5IYXNoEh0KCXNpZ25hdHVyZRgFIAEo",
            "CzIKLmFlbGYuSGFzaBI4ChRleHBlY3RlZF9taW5pbmdfdGltZRgGIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFwoPcHJvZHVjZWRfYmxvY2tz",
            "GAcgASgDEhkKEW1pc3NlZF90aW1lX3Nsb3RzGAggASgDEg4KBnB1YmtleRgJ",
            "IAEoCRIlChFwcmV2aW91c19pbl92YWx1ZRgKIAEoCzIKLmFlbGYuSGFzaBIk",
            "ChxzdXBwb3NlZF9vcmRlcl9vZl9uZXh0X3JvdW5kGAsgASgFEiEKGWZpbmFs",
            "X29yZGVyX29mX25leHRfcm91bmQYDCABKAUSNwoTYWN0dWFsX21pbmluZ190",
            "aW1lcxgNIAMoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoQZW5j",
            "cnlwdGVkX3BpZWNlcxgOIAMoCzIpLkFFRFBvUy5NaW5lckluUm91bmQuRW5j",
            "cnlwdGVkUGllY2VzRW50cnkSQwoQZGVjcnlwdGVkX3BpZWNlcxgPIAMoCzIp",
            "LkFFRFBvUy5NaW5lckluUm91bmQuRGVjcnlwdGVkUGllY2VzRW50cnkSHAoU",
            "cHJvZHVjZWRfdGlueV9ibG9ja3MYECABKAMSKQohaW1wbGllZF9pcnJldmVy",
            "c2libGVfYmxvY2tfaGVpZ2h0GBEgASgDGjYKFEVuY3J5cHRlZFBpZWNlc0Vu",
            "dHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDDoCOAEaNgoURGVjcnlw",
            "dGVkUGllY2VzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgMOgI4",
            "ASKIAQoeQUVsZkNvbnNlbnN1c0hlYWRlckluZm9ybWF0aW9uEhUKDXNlbmRl",
            "cl9wdWJrZXkYASABKAwSHAoFcm91bmQYAiABKAsyDS5BRURQb1MuUm91bmQS",
            "MQoJYmVoYXZpb3VyGAMgASgOMh4uQUVEUG9TLkFFbGZDb25zZW5zdXNCZWhh",
            "dmlvdXIicwoRQUVsZkNvbnNlbnN1c0hpbnQSMQoJYmVoYXZpb3VyGAEgASgO",
            "Mh4uQUVEUG9TLkFFbGZDb25zZW5zdXNCZWhhdmlvdXISEAoIcm91bmRfaWQY",
            "AiABKAMSGQoRcHJldmlvdXNfcm91bmRfaWQYAyABKAMigAUKH0FFbGZDb25z",
            "ZW5zdXNUcmlnZ2VySW5mb3JtYXRpb24SDgoGcHVia2V5GAEgASgMEhwKCGlu",
            "X3ZhbHVlGAIgASgLMgouYWVsZi5IYXNoEiUKEXByZXZpb3VzX2luX3ZhbHVl",
            "GAMgASgLMgouYWVsZi5IYXNoEjEKCWJlaGF2aW91chgEIAEoDjIeLkFFRFBv",
            "Uy5BRWxmQ29uc2Vuc3VzQmVoYXZpb3VyElYKEGVuY3J5cHRlZF9waWVjZXMY",
            "BSADKAsyPC5BRURQb1MuQUVsZkNvbnNlbnN1c1RyaWdnZXJJbmZvcm1hdGlv",
            "bi5FbmNyeXB0ZWRQaWVjZXNFbnRyeRJWChBkZWNyeXB0ZWRfcGllY2VzGAYg",
            "AygLMjwuQUVEUG9TLkFFbGZDb25zZW5zdXNUcmlnZ2VySW5mb3JtYXRpb24u",
            "RGVjcnlwdGVkUGllY2VzRW50cnkSWQoScmV2ZWFsZWRfaW5fdmFsdWVzGAcg",
            "AygLMj0uQUVEUG9TLkFFbGZDb25zZW5zdXNUcmlnZ2VySW5mb3JtYXRpb24u",
            "UmV2ZWFsZWRJblZhbHVlc0VudHJ5EhUKDXJhbmRvbV9udW1iZXIYCCABKAwa",
            "NgoURW5jcnlwdGVkUGllY2VzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgMOgI4ARo2ChREZWNyeXB0ZWRQaWVjZXNFbnRyeRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAw6AjgBGkMKFVJldmVhbGVkSW5WYWx1ZXNFbnRy",
            "eRILCgNrZXkYASABKAkSGQoFdmFsdWUYAiABKAsyCi5hZWxmLkhhc2g6AjgB",
            "IjUKCFRlcm1JbmZvEhMKC3Rlcm1fbnVtYmVyGAEgASgDEhQKDHJvdW5kX251",
            "bWJlchgCIAEoAyJXChhNaW5lckxpc3RXaXRoUm91bmROdW1iZXISJQoKbWlu",
            "ZXJfbGlzdBgBIAEoCzIRLkFFRFBvUy5NaW5lckxpc3QSFAoMcm91bmRfbnVt",
            "YmVyGAIgASgDIooBCg5UaW55QmxvY2tJbnB1dBIQCghyb3VuZF9pZBgBIAEo",
            "AxI2ChJhY3R1YWxfbWluaW5nX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEhcKD3Byb2R1Y2VkX2Jsb2NrcxgDIAEoAxIVCg1yYW5k",
            "b21fbnVtYmVyGAQgASgMIjwKFFZvdGVNaW5lcnNDb3VudElucHV0EhQKDG1p",
            "bmVyc19jb3VudBgBIAEoBRIOCgZhbW91bnQYAiABKAMiJQoUQ29uc2Vuc3Vz",
            "SW5mb3JtYXRpb24SDQoFdmFsdWUYASABKAwiKAoRR2V0TWluZXJMaXN0SW5w",
            "dXQSEwoLdGVybV9udW1iZXIYASABKAMiawoeUmFuZG9tTnVtYmVyUmVxdWVz",
            "dEluZm9ybWF0aW9uEhsKE3RhcmdldF9yb3VuZF9udW1iZXIYASABKAMSDQoF",
            "b3JkZXIYAiABKAMSHQoVZXhwZWN0ZWRfYmxvY2tfaGVpZ2h0GAMgASgDIiYK",
            "CEhhc2hMaXN0EhoKBnZhbHVlcxgBIAMoCzIKLmFlbGYuSGFzaCJFCh1MYXRl",
            "c3RQdWJrZXlUb1RpbnlCbG9ja3NDb3VudBIOCgZwdWJrZXkYASABKAkSFAoM",
            "YmxvY2tzX2NvdW50GAIgASgDIkgKFklycmV2ZXJzaWJsZUJsb2NrRm91bmQS",
            "KAoZaXJyZXZlcnNpYmxlX2Jsb2NrX2hlaWdodBgBIAEoA0IFiI/1AQE6BKC7",
            "GAEiWgojSXJyZXZlcnNpYmxlQmxvY2tIZWlnaHRVbmFjY2VwdGFibGUSLQol",
            "ZGlzdGFuY2VfdG9faXJyZXZlcnNpYmxlX2Jsb2NrX2hlaWdodBgBIAEoAzoE",
            "oLsYASLWAQoYTWluaW5nSW5mb3JtYXRpb25VcGRhdGVkEhUKBnB1YmtleRgB",
            "IAEoCUIFiI/1AQESNgoLbWluaW5nX3RpbWUYAiABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wQgWIj/UBARIYCgliZWhhdmlvdXIYAyABKAlCBYiP",
            "9QEBEhsKDGJsb2NrX2hlaWdodBgEIAEoA0IFiI/1AQESLgoTcHJldmlvdXNf",
            "YmxvY2tfaGFzaBgFIAEoCzIKLmFlbGYuSGFzaEIFiI/1AQE6BKC7GAEigwEK",
            "GFNlY3JldFNoYXJpbmdJbmZvcm1hdGlvbhIsCg5wcmV2aW91c19yb3VuZBgB",
            "IAEoCzINLkFFRFBvUy5Sb3VuZEIFiI/1AQESGAoQY3VycmVudF9yb3VuZF9p",
            "ZBgCIAEoAxIZChFwcmV2aW91c19yb3VuZF9pZBgDIAEoAzoEoLsYASJJChVN",
            "aW5pbmdSZXdhcmRHZW5lcmF0ZWQSGgoLdGVybV9udW1iZXIYASABKANCBYiP",
            "9QEBEg4KBmFtb3VudBgCIAEoAzoEoLsYASIvCg1NaW5lclJlcGxhY2VkEhgK",
            "EG5ld19taW5lcl9wdWJrZXkYASABKAk6BKC7GAEiSQofUmVjb3JkQ2FuZGlk",
            "YXRlUmVwbGFjZW1lbnRJbnB1dBISCgpvbGRfcHVia2V5GAEgASgJEhIKCm5l",
            "d19wdWJrZXkYAiABKAkinAQKDk5leHRSb3VuZElucHV0EhQKDHJvdW5kX251",
            "bWJlchgBIAEoAxJbChxyZWFsX3RpbWVfbWluZXJzX2luZm9ybWF0aW9uGAIg",
            "AygLMjUuQUVEUG9TLk5leHRSb3VuZElucHV0LlJlYWxUaW1lTWluZXJzSW5m",
            "b3JtYXRpb25FbnRyeRImCh5tYWluX2NoYWluX21pbmVyc19yb3VuZF9udW1i",
            "ZXIYAyABKAMSFgoOYmxvY2tjaGFpbl9hZ2UYBCABKAMSLgomZXh0cmFfYmxv",
            "Y2tfcHJvZHVjZXJfb2ZfcHJldmlvdXNfcm91bmQYBSABKAkSEwoLdGVybV9u",
            "dW1iZXIYBiABKAMSKwojY29uZmlybWVkX2lycmV2ZXJzaWJsZV9ibG9ja19o",
            "ZWlnaHQYByABKAMSMQopY29uZmlybWVkX2lycmV2ZXJzaWJsZV9ibG9ja19y",
            "b3VuZF9udW1iZXIYCCABKAMSIgoaaXNfbWluZXJfbGlzdF9qdXN0X2NoYW5n",
            "ZWQYCSABKAgSHwoXcm91bmRfaWRfZm9yX3ZhbGlkYXRpb24YCiABKAMSFQoN",
            "cmFuZG9tX251bWJlchgLIAEoDBpWCh5SZWFsVGltZU1pbmVyc0luZm9ybWF0",
            "aW9uRW50cnkSCwoDa2V5GAEgASgJEiMKBXZhbHVlGAIgASgLMhQuQUVEUG9T",
            "Lk1pbmVySW5Sb3VuZDoCOAEimgQKDU5leHRUZXJtSW5wdXQSFAoMcm91bmRf",
            "bnVtYmVyGAEgASgDEloKHHJlYWxfdGltZV9taW5lcnNfaW5mb3JtYXRpb24Y",
            "AiADKAsyNC5BRURQb1MuTmV4dFRlcm1JbnB1dC5SZWFsVGltZU1pbmVyc0lu",
            "Zm9ybWF0aW9uRW50cnkSJgoebWFpbl9jaGFpbl9taW5lcnNfcm91bmRfbnVt",
            "YmVyGAMgASgDEhYKDmJsb2NrY2hhaW5fYWdlGAQgASgDEi4KJmV4dHJhX2Js",
            "b2NrX3Byb2R1Y2VyX29mX3ByZXZpb3VzX3JvdW5kGAUgASgJEhMKC3Rlcm1f",
            "bnVtYmVyGAYgASgDEisKI2NvbmZpcm1lZF9pcnJldmVyc2libGVfYmxvY2tf",
            "aGVpZ2h0GAcgASgDEjEKKWNvbmZpcm1lZF9pcnJldmVyc2libGVfYmxvY2tf",
            "cm91bmRfbnVtYmVyGAggASgDEiIKGmlzX21pbmVyX2xpc3RfanVzdF9jaGFu",
            "Z2VkGAkgASgIEh8KF3JvdW5kX2lkX2Zvcl92YWxpZGF0aW9uGAogASgDEhUK",
            "DXJhbmRvbV9udW1iZXIYCyABKAwaVgoeUmVhbFRpbWVNaW5lcnNJbmZvcm1h",
            "dGlvbkVudHJ5EgsKA2tleRgBIAEoCRIjCgV2YWx1ZRgCIAEoCzIULkFFRFBv",
            "Uy5NaW5lckluUm91bmQ6AjgBKmYKFkFFbGZDb25zZW5zdXNCZWhhdmlvdXIS",
            "EAoMVVBEQVRFX1ZBTFVFEAASDgoKTkVYVF9ST1VORBABEg0KCU5FWFRfVEVS",
            "TRACEgsKB05PVEhJTkcQAxIOCgpUSU5ZX0JMT0NLEAQy8RUKDkFFRFBvU0Nv",
            "bnRyYWN0EmMKHEluaXRpYWxBRWxmQ29uc2Vuc3VzQ29udHJhY3QSKS5BRURQ",
            "b1MuSW5pdGlhbEFFbGZDb25zZW5zdXNDb250cmFjdElucHV0GhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5IgASNQoKRmlyc3RSb3VuZBINLkFFRFBvUy5Sb3Vu",
            "ZBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkEKC1VwZGF0ZVZhbHVlEhgu",
            "QUVEUG9TLlVwZGF0ZVZhbHVlSW5wdXQaFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkiABI9CglOZXh0Um91bmQSFi5BRURQb1MuTmV4dFJvdW5kSW5wdXQaFi5n",
            "b29nbGUucHJvdG9idWYuRW1wdHkiABI7CghOZXh0VGVybRIVLkFFRFBvUy5O",
            "ZXh0VGVybUlucHV0GhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5IgASTgoaVXBk",
            "YXRlVGlueUJsb2NrSW5mb3JtYXRpb24SFi5BRURQb1MuVGlueUJsb2NrSW5w",
            "dXQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJOChVTZXRNYXhpbXVtTWlu",
            "ZXJzQ291bnQSGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRoWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eSIAEk4KIkNoYW5nZU1heGltdW1NaW5lcnNDb3Vu",
            "dENvbnRyb2xsZXISDi5BdXRob3JpdHlJbmZvGhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5IgASUQoYU2V0TWluZXJJbmNyZWFzZUludGVydmFsEhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDY0VmFsdWUaFi5nb29nbGUucHJvdG9idWYuRW1wdHki",
            "ABJfChpSZWNvcmRDYW5kaWRhdGVSZXBsYWNlbWVudBInLkFFRFBvUy5SZWNv",
            "cmRDYW5kaWRhdGVSZXBsYWNlbWVudElucHV0GhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5IgASRwoTR2V0Q3VycmVudE1pbmVyTGlzdBIWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eRoRLkFFRFBvUy5NaW5lckxpc3QiBYiJ9wEBEk4KGUdldEN1",
            "cnJlbnRNaW5lclB1YmtleUxpc3QSFi5nb29nbGUucHJvdG9idWYuRW1wdHka",
            "Ei5BRURQb1MuUHVia2V5TGlzdCIFiIn3AQESZQoiR2V0Q3VycmVudE1pbmVy",
            "TGlzdFdpdGhSb3VuZE51bWJlchIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRog",
            "LkFFRFBvUy5NaW5lckxpc3RXaXRoUm91bmROdW1iZXIiBYiJ9wEBEkgKE0dl",
            "dFJvdW5kSW5mb3JtYXRpb24SGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZRoNLkFFRFBvUy5Sb3VuZCIFiIn3AQESUwoVR2V0Q3VycmVudFJvdW5kTnVt",
            "YmVyEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVm",
            "LkludDY0VmFsdWUiBYiJ9wEBEkoKGkdldEN1cnJlbnRSb3VuZEluZm9ybWF0",
            "aW9uEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Gg0uQUVEUG9TLlJvdW5kIgWI",
            "ifcBARJLChtHZXRQcmV2aW91c1JvdW5kSW5mb3JtYXRpb24SFi5nb29nbGUu",
            "cHJvdG9idWYuRW1wdHkaDS5BRURQb1MuUm91bmQiBYiJ9wEBElIKFEdldEN1",
            "cnJlbnRUZXJtTnVtYmVyEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDY0VmFsdWUiBYiJ9wEBElgKGkdldEN1cnJlbnRU",
            "ZXJtTWluaW5nUmV3YXJkEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDY0VmFsdWUiBYiJ9wEBEkMKDEdldE1pbmVyTGlz",
            "dBIZLkFFRFBvUy5HZXRNaW5lckxpc3RJbnB1dBoRLkFFRFBvUy5NaW5lckxp",
            "c3QiBYiJ9wEBEkgKFEdldFByZXZpb3VzTWluZXJMaXN0EhYuZ29vZ2xlLnBy",
            "b3RvYnVmLkVtcHR5GhEuQUVEUG9TLk1pbmVyTGlzdCIFiIn3AQESWgocR2V0",
            "TWluZWRCbG9ja3NPZlByZXZpb3VzVGVybRIWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eRobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJRChJH",
            "ZXROZXh0TWluZXJQdWJrZXkSFi5nb29nbGUucHJvdG9idWYuRW1wdHkaHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUiBYiJ9wEBEkIKDklzQ3VycmVu",
            "dE1pbmVyEg0uYWVsZi5BZGRyZXNzGhouZ29vZ2xlLnByb3RvYnVmLkJvb2xW",
            "YWx1ZSIFiIn3AQESUwoVR2V0TmV4dEVsZWN0Q291bnREb3duEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUi",
            "BYiJ9wEBEk8KGkdldFByZXZpb3VzVGVybUluZm9ybWF0aW9uEhsuZ29vZ2xl",
            "LnByb3RvYnVmLkludDY0VmFsdWUaDS5BRURQb1MuUm91bmQiBYiJ9wEBEj8K",
            "DUdldFJhbmRvbUhhc2gSGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRoK",
            "LmFlbGYuSGFzaCIFiIn3AQESUwoVR2V0TWF4aW11bUJsb2Nrc0NvdW50EhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVmLkludDMy",
            "VmFsdWUiBYiJ9wEBElMKFUdldE1heGltdW1NaW5lcnNDb3VudBIWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eRobLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVl",
            "IgWIifcBARJQCh9HZXRNYXhpbXVtTWluZXJzQ291bnRDb250cm9sbGVyEhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5Gg4uQXV0aG9yaXR5SW5mbyIFiIn3AQES",
            "VgoYR2V0TWluZXJJbmNyZWFzZUludGVydmFsEhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5GhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUiBYiJ9wEBElAK",
            "HEdldE1haW5DaGFpbkN1cnJlbnRNaW5lckxpc3QSFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaES5BRURQb1MuTWluZXJMaXN0IgWIifcBARJTCh5HZXRQcmV2",
            "aW91c1Rlcm1NaW5lclB1YmtleUxpc3QSFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkaEi5BRURQb1MuUHVia2V5TGlzdCIFiIn3AQESXAoeR2V0Q3VycmVudE1p",
            "bmluZ1Jld2FyZFBlckJsb2NrEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ghsu",
            "Z29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUiBYiJ9wEBGjiyzPYBM0FFbGYu",
            "Q29udHJhY3RzLkNvbnNlbnN1cy5BRURQb1MuQUVEUG9TQ29udHJhY3RTdGF0",
            "ZUIiqgIfQUVsZi5Db250cmFjdHMuQ29uc2Vuc3VzLkFFRFBvU2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.OptionsReflection.Descriptor, global::AElf.Types.CoreReflection.Descriptor, global::AuthorityInfoReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput), global::AElf.Contracts.Consensus.AEDPoS.InitialAElfConsensusContractInput.Parser, new[]{ "IsTermStayOne", "IsSideChain", "PeriodSeconds", "MinerIncreaseInterval" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput), global::AElf.Contracts.Consensus.AEDPoS.UpdateValueInput.Parser, new[]{ "OutValue", "Signature", "RoundId", "PreviousInValue", "ActualMiningTime", "SupposedOrderOfNextRound", "TuneOrderInformation", "EncryptedPieces", "DecryptedPieces", "ProducedBlocks", "MinersPreviousInValues", "ImpliedIrreversibleBlockHeight", "RandomNumber" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.MinerList), global::AElf.Contracts.Consensus.AEDPoS.MinerList.Parser, new[]{ "Pubkeys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.PubkeyList), global::AElf.Contracts.Consensus.AEDPoS.PubkeyList.Parser, new[]{ "Pubkeys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.TermNumberLookUp), global::AElf.Contracts.Consensus.AEDPoS.TermNumberLookUp.Parser, new[]{ "Map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.Candidates), global::AElf.Contracts.Consensus.AEDPoS.Candidates.Parser, new[]{ "Pubkeys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.Round), global::AElf.Contracts.Consensus.AEDPoS.Round.Parser, new[]{ "RoundNumber", "RealTimeMinersInformation", "MainChainMinersRoundNumber", "BlockchainAge", "ExtraBlockProducerOfPreviousRound", "TermNumber", "ConfirmedIrreversibleBlockHeight", "ConfirmedIrreversibleBlockRoundNumber", "IsMinerListJustChanged", "RoundIdForValidation" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.MinerInRound), global::AElf.Contracts.Consensus.AEDPoS.MinerInRound.Parser, new[]{ "Order", "IsExtraBlockProducer", "InValue", "OutValue", "Signature", "ExpectedMiningTime", "ProducedBlocks", "MissedTimeSlots", "Pubkey", "PreviousInValue", "SupposedOrderOfNextRound", "FinalOrderOfNextRound", "ActualMiningTimes", "EncryptedPieces", "DecryptedPieces", "ProducedTinyBlocks", "ImpliedIrreversibleBlockHeight" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusHeaderInformation), global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusHeaderInformation.Parser, new[]{ "SenderPubkey", "Round", "Behaviour" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusHint), global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusHint.Parser, new[]{ "Behaviour", "RoundId", "PreviousRoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusTriggerInformation), global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusTriggerInformation.Parser, new[]{ "Pubkey", "InValue", "PreviousInValue", "Behaviour", "EncryptedPieces", "DecryptedPieces", "RevealedInValues", "RandomNumber" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.TermInfo), global::AElf.Contracts.Consensus.AEDPoS.TermInfo.Parser, new[]{ "TermNumber", "RoundNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber), global::AElf.Contracts.Consensus.AEDPoS.MinerListWithRoundNumber.Parser, new[]{ "MinerList", "RoundNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput), global::AElf.Contracts.Consensus.AEDPoS.TinyBlockInput.Parser, new[]{ "RoundId", "ActualMiningTime", "ProducedBlocks", "RandomNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.VoteMinersCountInput), global::AElf.Contracts.Consensus.AEDPoS.VoteMinersCountInput.Parser, new[]{ "MinersCount", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.ConsensusInformation), global::AElf.Contracts.Consensus.AEDPoS.ConsensusInformation.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput), global::AElf.Contracts.Consensus.AEDPoS.GetMinerListInput.Parser, new[]{ "TermNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.RandomNumberRequestInformation), global::AElf.Contracts.Consensus.AEDPoS.RandomNumberRequestInformation.Parser, new[]{ "TargetRoundNumber", "Order", "ExpectedBlockHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.HashList), global::AElf.Contracts.Consensus.AEDPoS.HashList.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.LatestPubkeyToTinyBlocksCount), global::AElf.Contracts.Consensus.AEDPoS.LatestPubkeyToTinyBlocksCount.Parser, new[]{ "Pubkey", "BlocksCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.IrreversibleBlockFound), global::AElf.Contracts.Consensus.AEDPoS.IrreversibleBlockFound.Parser, new[]{ "IrreversibleBlockHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.IrreversibleBlockHeightUnacceptable), global::AElf.Contracts.Consensus.AEDPoS.IrreversibleBlockHeightUnacceptable.Parser, new[]{ "DistanceToIrreversibleBlockHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.MiningInformationUpdated), global::AElf.Contracts.Consensus.AEDPoS.MiningInformationUpdated.Parser, new[]{ "Pubkey", "MiningTime", "Behaviour", "BlockHeight", "PreviousBlockHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.SecretSharingInformation), global::AElf.Contracts.Consensus.AEDPoS.SecretSharingInformation.Parser, new[]{ "PreviousRound", "CurrentRoundId", "PreviousRoundId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.MiningRewardGenerated), global::AElf.Contracts.Consensus.AEDPoS.MiningRewardGenerated.Parser, new[]{ "TermNumber", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.MinerReplaced), global::AElf.Contracts.Consensus.AEDPoS.MinerReplaced.Parser, new[]{ "NewMinerPubkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput), global::AElf.Contracts.Consensus.AEDPoS.RecordCandidateReplacementInput.Parser, new[]{ "OldPubkey", "NewPubkey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.NextRoundInput), global::AElf.Contracts.Consensus.AEDPoS.NextRoundInput.Parser, new[]{ "RoundNumber", "RealTimeMinersInformation", "MainChainMinersRoundNumber", "BlockchainAge", "ExtraBlockProducerOfPreviousRound", "TermNumber", "ConfirmedIrreversibleBlockHeight", "ConfirmedIrreversibleBlockRoundNumber", "IsMinerListJustChanged", "RoundIdForValidation", "RandomNumber" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::AElf.Contracts.Consensus.AEDPoS.NextTermInput), global::AElf.Contracts.Consensus.AEDPoS.NextTermInput.Parser, new[]{ "RoundNumber", "RealTimeMinersInformation", "MainChainMinersRoundNumber", "BlockchainAge", "ExtraBlockProducerOfPreviousRound", "TermNumber", "ConfirmedIrreversibleBlockHeight", "ConfirmedIrreversibleBlockRoundNumber", "IsMinerListJustChanged", "RoundIdForValidation", "RandomNumber" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  internal enum AElfConsensusBehaviour {
    [pbr::OriginalName("UPDATE_VALUE")] UpdateValue = 0,
    [pbr::OriginalName("NEXT_ROUND")] NextRound = 1,
    [pbr::OriginalName("NEXT_TERM")] NextTerm = 2,
    [pbr::OriginalName("NOTHING")] Nothing = 3,
    [pbr::OriginalName("TINY_BLOCK")] TinyBlock = 4,
  }

  #endregion

  #region Messages
  internal sealed partial class InitialAElfConsensusContractInput : pb::IMessage<InitialAElfConsensusContractInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InitialAElfConsensusContractInput> _parser = new pb::MessageParser<InitialAElfConsensusContractInput>(() => new InitialAElfConsensusContractInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InitialAElfConsensusContractInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitialAElfConsensusContractInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitialAElfConsensusContractInput(InitialAElfConsensusContractInput other) : this() {
      isTermStayOne_ = other.isTermStayOne_;
      isSideChain_ = other.isSideChain_;
      periodSeconds_ = other.periodSeconds_;
      minerIncreaseInterval_ = other.minerIncreaseInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InitialAElfConsensusContractInput Clone() {
      return new InitialAElfConsensusContractInput(this);
    }

    /// <summary>Field number for the "is_term_stay_one" field.</summary>
    public const int IsTermStayOneFieldNumber = 1;
    private bool isTermStayOne_;
    /// <summary>
    /// Whether not to change the term.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsTermStayOne {
      get { return isTermStayOne_; }
      set {
        isTermStayOne_ = value;
      }
    }

    /// <summary>Field number for the "is_side_chain" field.</summary>
    public const int IsSideChainFieldNumber = 2;
    private bool isSideChain_;
    /// <summary>
    /// Is a side chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsSideChain {
      get { return isSideChain_; }
      set {
        isSideChain_ = value;
      }
    }

    /// <summary>Field number for the "period_seconds" field.</summary>
    public const int PeriodSecondsFieldNumber = 3;
    private long periodSeconds_;
    /// <summary>
    /// The number of seconds per term.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PeriodSeconds {
      get { return periodSeconds_; }
      set {
        periodSeconds_ = value;
      }
    }

    /// <summary>Field number for the "miner_increase_interval" field.</summary>
    public const int MinerIncreaseIntervalFieldNumber = 4;
    private long minerIncreaseInterval_;
    /// <summary>
    /// The interval second that increases the number of miners.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinerIncreaseInterval {
      get { return minerIncreaseInterval_; }
      set {
        minerIncreaseInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InitialAElfConsensusContractInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InitialAElfConsensusContractInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsTermStayOne != other.IsTermStayOne) return false;
      if (IsSideChain != other.IsSideChain) return false;
      if (PeriodSeconds != other.PeriodSeconds) return false;
      if (MinerIncreaseInterval != other.MinerIncreaseInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsTermStayOne != false) hash ^= IsTermStayOne.GetHashCode();
      if (IsSideChain != false) hash ^= IsSideChain.GetHashCode();
      if (PeriodSeconds != 0L) hash ^= PeriodSeconds.GetHashCode();
      if (MinerIncreaseInterval != 0L) hash ^= MinerIncreaseInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsTermStayOne != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsTermStayOne);
      }
      if (IsSideChain != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSideChain);
      }
      if (PeriodSeconds != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PeriodSeconds);
      }
      if (MinerIncreaseInterval != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinerIncreaseInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsTermStayOne != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsTermStayOne);
      }
      if (IsSideChain != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSideChain);
      }
      if (PeriodSeconds != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PeriodSeconds);
      }
      if (MinerIncreaseInterval != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MinerIncreaseInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsTermStayOne != false) {
        size += 1 + 1;
      }
      if (IsSideChain != false) {
        size += 1 + 1;
      }
      if (PeriodSeconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PeriodSeconds);
      }
      if (MinerIncreaseInterval != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinerIncreaseInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InitialAElfConsensusContractInput other) {
      if (other == null) {
        return;
      }
      if (other.IsTermStayOne != false) {
        IsTermStayOne = other.IsTermStayOne;
      }
      if (other.IsSideChain != false) {
        IsSideChain = other.IsSideChain;
      }
      if (other.PeriodSeconds != 0L) {
        PeriodSeconds = other.PeriodSeconds;
      }
      if (other.MinerIncreaseInterval != 0L) {
        MinerIncreaseInterval = other.MinerIncreaseInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsTermStayOne = input.ReadBool();
            break;
          }
          case 16: {
            IsSideChain = input.ReadBool();
            break;
          }
          case 24: {
            PeriodSeconds = input.ReadInt64();
            break;
          }
          case 32: {
            MinerIncreaseInterval = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsTermStayOne = input.ReadBool();
            break;
          }
          case 16: {
            IsSideChain = input.ReadBool();
            break;
          }
          case 24: {
            PeriodSeconds = input.ReadInt64();
            break;
          }
          case 32: {
            MinerIncreaseInterval = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class UpdateValueInput : pb::IMessage<UpdateValueInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateValueInput> _parser = new pb::MessageParser<UpdateValueInput>(() => new UpdateValueInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateValueInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateValueInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateValueInput(UpdateValueInput other) : this() {
      outValue_ = other.outValue_ != null ? other.outValue_.Clone() : null;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      roundId_ = other.roundId_;
      previousInValue_ = other.previousInValue_ != null ? other.previousInValue_.Clone() : null;
      actualMiningTime_ = other.actualMiningTime_ != null ? other.actualMiningTime_.Clone() : null;
      supposedOrderOfNextRound_ = other.supposedOrderOfNextRound_;
      tuneOrderInformation_ = other.tuneOrderInformation_.Clone();
      encryptedPieces_ = other.encryptedPieces_.Clone();
      decryptedPieces_ = other.decryptedPieces_.Clone();
      producedBlocks_ = other.producedBlocks_;
      minersPreviousInValues_ = other.minersPreviousInValues_.Clone();
      impliedIrreversibleBlockHeight_ = other.impliedIrreversibleBlockHeight_;
      randomNumber_ = other.randomNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateValueInput Clone() {
      return new UpdateValueInput(this);
    }

    /// <summary>Field number for the "out_value" field.</summary>
    public const int OutValueFieldNumber = 1;
    private global::AElf.Types.Hash outValue_;
    /// <summary>
    /// Calculated from current in value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash OutValue {
      get { return outValue_; }
      set {
        outValue_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private global::AElf.Types.Hash signature_;
    /// <summary>
    /// Calculated from current in value and signatures of previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 3;
    private long roundId_;
    /// <summary>
    /// To ensure the values to update will be apply to correct round by comparing round id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "previous_in_value" field.</summary>
    public const int PreviousInValueFieldNumber = 4;
    private global::AElf.Types.Hash previousInValue_;
    /// <summary>
    /// Publish previous in value for validation previous signature and previous out value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PreviousInValue {
      get { return previousInValue_; }
      set {
        previousInValue_ = value;
      }
    }

    /// <summary>Field number for the "actual_mining_time" field.</summary>
    public const int ActualMiningTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualMiningTime_;
    /// <summary>
    /// The actual mining time, miners must fill actual mining time when they do the mining.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualMiningTime {
      get { return actualMiningTime_; }
      set {
        actualMiningTime_ = value;
      }
    }

    /// <summary>Field number for the "supposed_order_of_next_round" field.</summary>
    public const int SupposedOrderOfNextRoundFieldNumber = 6;
    private int supposedOrderOfNextRound_;
    /// <summary>
    /// The supposed order of mining for the next round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SupposedOrderOfNextRound {
      get { return supposedOrderOfNextRound_; }
      set {
        supposedOrderOfNextRound_ = value;
      }
    }

    /// <summary>Field number for the "tune_order_information" field.</summary>
    public const int TuneOrderInformationFieldNumber = 7;
    private static readonly pbc::MapField<string, int>.Codec _map_tuneOrderInformation_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 58);
    private readonly pbc::MapField<string, int> tuneOrderInformation_ = new pbc::MapField<string, int>();
    /// <summary>
    /// The tuning order of mining for the next round, miner public key -> order.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, int> TuneOrderInformation {
      get { return tuneOrderInformation_; }
    }

    /// <summary>Field number for the "encrypted_pieces" field.</summary>
    public const int EncryptedPiecesFieldNumber = 8;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_encryptedPieces_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 66);
    private readonly pbc::MapField<string, pb::ByteString> encryptedPieces_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// The encrypted pieces of InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, pb::ByteString> EncryptedPieces {
      get { return encryptedPieces_; }
    }

    /// <summary>Field number for the "decrypted_pieces" field.</summary>
    public const int DecryptedPiecesFieldNumber = 9;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_decryptedPieces_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 74);
    private readonly pbc::MapField<string, pb::ByteString> decryptedPieces_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// The decrypted pieces of InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, pb::ByteString> DecryptedPieces {
      get { return decryptedPieces_; }
    }

    /// <summary>Field number for the "produced_blocks" field.</summary>
    public const int ProducedBlocksFieldNumber = 10;
    private long producedBlocks_;
    /// <summary>
    /// The amount of produced blocks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProducedBlocks {
      get { return producedBlocks_; }
      set {
        producedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "miners_previous_in_values" field.</summary>
    public const int MinersPreviousInValuesFieldNumber = 11;
    private static readonly pbc::MapField<string, global::AElf.Types.Hash>.Codec _map_minersPreviousInValues_codec
        = new pbc::MapField<string, global::AElf.Types.Hash>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::AElf.Types.Hash.Parser), 90);
    private readonly pbc::MapField<string, global::AElf.Types.Hash> minersPreviousInValues_ = new pbc::MapField<string, global::AElf.Types.Hash>();
    /// <summary>
    /// The InValue in the previous round, miner public key -> InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::AElf.Types.Hash> MinersPreviousInValues {
      get { return minersPreviousInValues_; }
    }

    /// <summary>Field number for the "implied_irreversible_block_height" field.</summary>
    public const int ImpliedIrreversibleBlockHeightFieldNumber = 12;
    private long impliedIrreversibleBlockHeight_;
    /// <summary>
    /// The irreversible block height that miner recorded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ImpliedIrreversibleBlockHeight {
      get { return impliedIrreversibleBlockHeight_; }
      set {
        impliedIrreversibleBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 13;
    private pb::ByteString randomNumber_ = pb::ByteString.Empty;
    /// <summary>
    /// The random number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateValueInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateValueInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OutValue, other.OutValue)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (RoundId != other.RoundId) return false;
      if (!object.Equals(PreviousInValue, other.PreviousInValue)) return false;
      if (!object.Equals(ActualMiningTime, other.ActualMiningTime)) return false;
      if (SupposedOrderOfNextRound != other.SupposedOrderOfNextRound) return false;
      if (!TuneOrderInformation.Equals(other.TuneOrderInformation)) return false;
      if (!EncryptedPieces.Equals(other.EncryptedPieces)) return false;
      if (!DecryptedPieces.Equals(other.DecryptedPieces)) return false;
      if (ProducedBlocks != other.ProducedBlocks) return false;
      if (!MinersPreviousInValues.Equals(other.MinersPreviousInValues)) return false;
      if (ImpliedIrreversibleBlockHeight != other.ImpliedIrreversibleBlockHeight) return false;
      if (RandomNumber != other.RandomNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (outValue_ != null) hash ^= OutValue.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (previousInValue_ != null) hash ^= PreviousInValue.GetHashCode();
      if (actualMiningTime_ != null) hash ^= ActualMiningTime.GetHashCode();
      if (SupposedOrderOfNextRound != 0) hash ^= SupposedOrderOfNextRound.GetHashCode();
      hash ^= TuneOrderInformation.GetHashCode();
      hash ^= EncryptedPieces.GetHashCode();
      hash ^= DecryptedPieces.GetHashCode();
      if (ProducedBlocks != 0L) hash ^= ProducedBlocks.GetHashCode();
      hash ^= MinersPreviousInValues.GetHashCode();
      if (ImpliedIrreversibleBlockHeight != 0L) hash ^= ImpliedIrreversibleBlockHeight.GetHashCode();
      if (RandomNumber.Length != 0) hash ^= RandomNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (outValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OutValue);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RoundId);
      }
      if (previousInValue_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PreviousInValue);
      }
      if (actualMiningTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ActualMiningTime);
      }
      if (SupposedOrderOfNextRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SupposedOrderOfNextRound);
      }
      tuneOrderInformation_.WriteTo(output, _map_tuneOrderInformation_codec);
      encryptedPieces_.WriteTo(output, _map_encryptedPieces_codec);
      decryptedPieces_.WriteTo(output, _map_decryptedPieces_codec);
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ProducedBlocks);
      }
      minersPreviousInValues_.WriteTo(output, _map_minersPreviousInValues_codec);
      if (ImpliedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(ImpliedIrreversibleBlockHeight);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (outValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OutValue);
      }
      if (signature_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Signature);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(RoundId);
      }
      if (previousInValue_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PreviousInValue);
      }
      if (actualMiningTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ActualMiningTime);
      }
      if (SupposedOrderOfNextRound != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SupposedOrderOfNextRound);
      }
      tuneOrderInformation_.WriteTo(ref output, _map_tuneOrderInformation_codec);
      encryptedPieces_.WriteTo(ref output, _map_encryptedPieces_codec);
      decryptedPieces_.WriteTo(ref output, _map_decryptedPieces_codec);
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ProducedBlocks);
      }
      minersPreviousInValues_.WriteTo(ref output, _map_minersPreviousInValues_codec);
      if (ImpliedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(ImpliedIrreversibleBlockHeight);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (outValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutValue);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (previousInValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousInValue);
      }
      if (actualMiningTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualMiningTime);
      }
      if (SupposedOrderOfNextRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SupposedOrderOfNextRound);
      }
      size += tuneOrderInformation_.CalculateSize(_map_tuneOrderInformation_codec);
      size += encryptedPieces_.CalculateSize(_map_encryptedPieces_codec);
      size += decryptedPieces_.CalculateSize(_map_decryptedPieces_codec);
      if (ProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProducedBlocks);
      }
      size += minersPreviousInValues_.CalculateSize(_map_minersPreviousInValues_codec);
      if (ImpliedIrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ImpliedIrreversibleBlockHeight);
      }
      if (RandomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RandomNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateValueInput other) {
      if (other == null) {
        return;
      }
      if (other.outValue_ != null) {
        if (outValue_ == null) {
          OutValue = new global::AElf.Types.Hash();
        }
        OutValue.MergeFrom(other.OutValue);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          Signature = new global::AElf.Types.Hash();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.previousInValue_ != null) {
        if (previousInValue_ == null) {
          PreviousInValue = new global::AElf.Types.Hash();
        }
        PreviousInValue.MergeFrom(other.PreviousInValue);
      }
      if (other.actualMiningTime_ != null) {
        if (actualMiningTime_ == null) {
          ActualMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualMiningTime.MergeFrom(other.ActualMiningTime);
      }
      if (other.SupposedOrderOfNextRound != 0) {
        SupposedOrderOfNextRound = other.SupposedOrderOfNextRound;
      }
      tuneOrderInformation_.Add(other.tuneOrderInformation_);
      encryptedPieces_.Add(other.encryptedPieces_);
      decryptedPieces_.Add(other.decryptedPieces_);
      if (other.ProducedBlocks != 0L) {
        ProducedBlocks = other.ProducedBlocks;
      }
      minersPreviousInValues_.Add(other.minersPreviousInValues_);
      if (other.ImpliedIrreversibleBlockHeight != 0L) {
        ImpliedIrreversibleBlockHeight = other.ImpliedIrreversibleBlockHeight;
      }
      if (other.RandomNumber.Length != 0) {
        RandomNumber = other.RandomNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (outValue_ == null) {
              OutValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OutValue);
            break;
          }
          case 18: {
            if (signature_ == null) {
              Signature = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Signature);
            break;
          }
          case 24: {
            RoundId = input.ReadInt64();
            break;
          }
          case 34: {
            if (previousInValue_ == null) {
              PreviousInValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousInValue);
            break;
          }
          case 42: {
            if (actualMiningTime_ == null) {
              ActualMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualMiningTime);
            break;
          }
          case 48: {
            SupposedOrderOfNextRound = input.ReadInt32();
            break;
          }
          case 58: {
            tuneOrderInformation_.AddEntriesFrom(input, _map_tuneOrderInformation_codec);
            break;
          }
          case 66: {
            encryptedPieces_.AddEntriesFrom(input, _map_encryptedPieces_codec);
            break;
          }
          case 74: {
            decryptedPieces_.AddEntriesFrom(input, _map_decryptedPieces_codec);
            break;
          }
          case 80: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 90: {
            minersPreviousInValues_.AddEntriesFrom(input, _map_minersPreviousInValues_codec);
            break;
          }
          case 96: {
            ImpliedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 106: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (outValue_ == null) {
              OutValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OutValue);
            break;
          }
          case 18: {
            if (signature_ == null) {
              Signature = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Signature);
            break;
          }
          case 24: {
            RoundId = input.ReadInt64();
            break;
          }
          case 34: {
            if (previousInValue_ == null) {
              PreviousInValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousInValue);
            break;
          }
          case 42: {
            if (actualMiningTime_ == null) {
              ActualMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualMiningTime);
            break;
          }
          case 48: {
            SupposedOrderOfNextRound = input.ReadInt32();
            break;
          }
          case 58: {
            tuneOrderInformation_.AddEntriesFrom(ref input, _map_tuneOrderInformation_codec);
            break;
          }
          case 66: {
            encryptedPieces_.AddEntriesFrom(ref input, _map_encryptedPieces_codec);
            break;
          }
          case 74: {
            decryptedPieces_.AddEntriesFrom(ref input, _map_decryptedPieces_codec);
            break;
          }
          case 80: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 90: {
            minersPreviousInValues_.AddEntriesFrom(ref input, _map_minersPreviousInValues_codec);
            break;
          }
          case 96: {
            ImpliedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 106: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MinerList : pb::IMessage<MinerList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinerList> _parser = new pb::MessageParser<MinerList>(() => new MinerList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MinerList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerList(MinerList other) : this() {
      pubkeys_ = other.pubkeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerList Clone() {
      return new MinerList(this);
    }

    /// <summary>Field number for the "pubkeys" field.</summary>
    public const int PubkeysFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_pubkeys_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> pubkeys_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// The miners public key list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Pubkeys {
      get { return pubkeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MinerList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MinerList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pubkeys_.Equals(other.pubkeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pubkeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pubkeys_.WriteTo(output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pubkeys_.WriteTo(ref output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += pubkeys_.CalculateSize(_repeated_pubkeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MinerList other) {
      if (other == null) {
        return;
      }
      pubkeys_.Add(other.pubkeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(ref input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class PubkeyList : pb::IMessage<PubkeyList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PubkeyList> _parser = new pb::MessageParser<PubkeyList>(() => new PubkeyList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PubkeyList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PubkeyList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PubkeyList(PubkeyList other) : this() {
      pubkeys_ = other.pubkeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PubkeyList Clone() {
      return new PubkeyList(this);
    }

    /// <summary>Field number for the "pubkeys" field.</summary>
    public const int PubkeysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_pubkeys_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> pubkeys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The miners public key list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Pubkeys {
      get { return pubkeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PubkeyList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PubkeyList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pubkeys_.Equals(other.pubkeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pubkeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pubkeys_.WriteTo(output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pubkeys_.WriteTo(ref output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += pubkeys_.CalculateSize(_repeated_pubkeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PubkeyList other) {
      if (other == null) {
        return;
      }
      pubkeys_.Add(other.pubkeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(ref input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TermNumberLookUp : pb::IMessage<TermNumberLookUp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TermNumberLookUp> _parser = new pb::MessageParser<TermNumberLookUp>(() => new TermNumberLookUp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TermNumberLookUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TermNumberLookUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TermNumberLookUp(TermNumberLookUp other) : this() {
      map_ = other.map_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TermNumberLookUp Clone() {
      return new TermNumberLookUp(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private static readonly pbc::MapField<long, long>.Codec _map_map_codec
        = new pbc::MapField<long, long>.Codec(pb::FieldCodec.ForInt64(8, 0L), pb::FieldCodec.ForInt64(16, 0L), 10);
    private readonly pbc::MapField<long, long> map_ = new pbc::MapField<long, long>();
    /// <summary>
    /// Term number -> Round number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<long, long> Map {
      get { return map_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TermNumberLookUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TermNumberLookUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Map.Equals(other.Map)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Map.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      map_.WriteTo(output, _map_map_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      map_.WriteTo(ref output, _map_map_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += map_.CalculateSize(_map_map_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TermNumberLookUp other) {
      if (other == null) {
        return;
      }
      map_.Add(other.map_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            map_.AddEntriesFrom(input, _map_map_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            map_.AddEntriesFrom(ref input, _map_map_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class Candidates : pb::IMessage<Candidates>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Candidates> _parser = new pb::MessageParser<Candidates>(() => new Candidates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Candidates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Candidates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Candidates(Candidates other) : this() {
      pubkeys_ = other.pubkeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Candidates Clone() {
      return new Candidates(this);
    }

    /// <summary>Field number for the "pubkeys" field.</summary>
    public const int PubkeysFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_pubkeys_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> pubkeys_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// The candidate public keys.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Pubkeys {
      get { return pubkeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Candidates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Candidates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pubkeys_.Equals(other.pubkeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pubkeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      pubkeys_.WriteTo(output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      pubkeys_.WriteTo(ref output, _repeated_pubkeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += pubkeys_.CalculateSize(_repeated_pubkeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Candidates other) {
      if (other == null) {
        return;
      }
      pubkeys_.Add(other.pubkeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            pubkeys_.AddEntriesFrom(ref input, _repeated_pubkeys_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class Round : pb::IMessage<Round>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Round> _parser = new pb::MessageParser<Round>(() => new Round());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Round> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Round() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Round(Round other) : this() {
      roundNumber_ = other.roundNumber_;
      realTimeMinersInformation_ = other.realTimeMinersInformation_.Clone();
      mainChainMinersRoundNumber_ = other.mainChainMinersRoundNumber_;
      blockchainAge_ = other.blockchainAge_;
      extraBlockProducerOfPreviousRound_ = other.extraBlockProducerOfPreviousRound_;
      termNumber_ = other.termNumber_;
      confirmedIrreversibleBlockHeight_ = other.confirmedIrreversibleBlockHeight_;
      confirmedIrreversibleBlockRoundNumber_ = other.confirmedIrreversibleBlockRoundNumber_;
      isMinerListJustChanged_ = other.isMinerListJustChanged_;
      roundIdForValidation_ = other.roundIdForValidation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Round Clone() {
      return new Round(this);
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 1;
    private long roundNumber_;
    /// <summary>
    /// The round number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    /// <summary>Field number for the "real_time_miners_information" field.</summary>
    public const int RealTimeMinersInformationFieldNumber = 2;
    private static readonly pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>.Codec _map_realTimeMinersInformation_codec
        = new pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound.Parser), 18);
    private readonly pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound> realTimeMinersInformation_ = new pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>();
    /// <summary>
    /// Current miner information, miner public key -> miner information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound> RealTimeMinersInformation {
      get { return realTimeMinersInformation_; }
    }

    /// <summary>Field number for the "main_chain_miners_round_number" field.</summary>
    public const int MainChainMinersRoundNumberFieldNumber = 3;
    private long mainChainMinersRoundNumber_;
    /// <summary>
    /// The round number on the main chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MainChainMinersRoundNumber {
      get { return mainChainMinersRoundNumber_; }
      set {
        mainChainMinersRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "blockchain_age" field.</summary>
    public const int BlockchainAgeFieldNumber = 4;
    private long blockchainAge_;
    /// <summary>
    /// The time from chain start to current round (seconds).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlockchainAge {
      get { return blockchainAge_; }
      set {
        blockchainAge_ = value;
      }
    }

    /// <summary>Field number for the "extra_block_producer_of_previous_round" field.</summary>
    public const int ExtraBlockProducerOfPreviousRoundFieldNumber = 5;
    private string extraBlockProducerOfPreviousRound_ = "";
    /// <summary>
    /// The miner public key that produced the extra block in the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExtraBlockProducerOfPreviousRound {
      get { return extraBlockProducerOfPreviousRound_; }
      set {
        extraBlockProducerOfPreviousRound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 6;
    private long termNumber_;
    /// <summary>
    /// The current term number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_irreversible_block_height" field.</summary>
    public const int ConfirmedIrreversibleBlockHeightFieldNumber = 7;
    private long confirmedIrreversibleBlockHeight_;
    /// <summary>
    /// The height of the confirmed irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ConfirmedIrreversibleBlockHeight {
      get { return confirmedIrreversibleBlockHeight_; }
      set {
        confirmedIrreversibleBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_irreversible_block_round_number" field.</summary>
    public const int ConfirmedIrreversibleBlockRoundNumberFieldNumber = 8;
    private long confirmedIrreversibleBlockRoundNumber_;
    /// <summary>
    /// The round number of the confirmed irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ConfirmedIrreversibleBlockRoundNumber {
      get { return confirmedIrreversibleBlockRoundNumber_; }
      set {
        confirmedIrreversibleBlockRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "is_miner_list_just_changed" field.</summary>
    public const int IsMinerListJustChangedFieldNumber = 9;
    private bool isMinerListJustChanged_;
    /// <summary>
    /// Is miner list different from the the miner list in the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMinerListJustChanged {
      get { return isMinerListJustChanged_; }
      set {
        isMinerListJustChanged_ = value;
      }
    }

    /// <summary>Field number for the "round_id_for_validation" field.</summary>
    public const int RoundIdForValidationFieldNumber = 10;
    private long roundIdForValidation_;
    /// <summary>
    /// The round id, calculated by summing block producers’ expecting time (second).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundIdForValidation {
      get { return roundIdForValidation_; }
      set {
        roundIdForValidation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Round);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Round other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundNumber != other.RoundNumber) return false;
      if (!RealTimeMinersInformation.Equals(other.RealTimeMinersInformation)) return false;
      if (MainChainMinersRoundNumber != other.MainChainMinersRoundNumber) return false;
      if (BlockchainAge != other.BlockchainAge) return false;
      if (ExtraBlockProducerOfPreviousRound != other.ExtraBlockProducerOfPreviousRound) return false;
      if (TermNumber != other.TermNumber) return false;
      if (ConfirmedIrreversibleBlockHeight != other.ConfirmedIrreversibleBlockHeight) return false;
      if (ConfirmedIrreversibleBlockRoundNumber != other.ConfirmedIrreversibleBlockRoundNumber) return false;
      if (IsMinerListJustChanged != other.IsMinerListJustChanged) return false;
      if (RoundIdForValidation != other.RoundIdForValidation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      hash ^= RealTimeMinersInformation.GetHashCode();
      if (MainChainMinersRoundNumber != 0L) hash ^= MainChainMinersRoundNumber.GetHashCode();
      if (BlockchainAge != 0L) hash ^= BlockchainAge.GetHashCode();
      if (ExtraBlockProducerOfPreviousRound.Length != 0) hash ^= ExtraBlockProducerOfPreviousRound.GetHashCode();
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (ConfirmedIrreversibleBlockHeight != 0L) hash ^= ConfirmedIrreversibleBlockHeight.GetHashCode();
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) hash ^= ConfirmedIrreversibleBlockRoundNumber.GetHashCode();
      if (IsMinerListJustChanged != false) hash ^= IsMinerListJustChanged.GetHashCode();
      if (RoundIdForValidation != 0L) hash ^= RoundIdForValidation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundNumber);
      }
      realTimeMinersInformation_.WriteTo(output, _map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMinerListJustChanged);
      }
      if (RoundIdForValidation != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RoundIdForValidation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundNumber);
      }
      realTimeMinersInformation_.WriteTo(ref output, _map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMinerListJustChanged);
      }
      if (RoundIdForValidation != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RoundIdForValidation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      size += realTimeMinersInformation_.CalculateSize(_map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        size += 1 + 1;
      }
      if (RoundIdForValidation != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundIdForValidation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Round other) {
      if (other == null) {
        return;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      realTimeMinersInformation_.Add(other.realTimeMinersInformation_);
      if (other.MainChainMinersRoundNumber != 0L) {
        MainChainMinersRoundNumber = other.MainChainMinersRoundNumber;
      }
      if (other.BlockchainAge != 0L) {
        BlockchainAge = other.BlockchainAge;
      }
      if (other.ExtraBlockProducerOfPreviousRound.Length != 0) {
        ExtraBlockProducerOfPreviousRound = other.ExtraBlockProducerOfPreviousRound;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.ConfirmedIrreversibleBlockHeight != 0L) {
        ConfirmedIrreversibleBlockHeight = other.ConfirmedIrreversibleBlockHeight;
      }
      if (other.ConfirmedIrreversibleBlockRoundNumber != 0L) {
        ConfirmedIrreversibleBlockRoundNumber = other.ConfirmedIrreversibleBlockRoundNumber;
      }
      if (other.IsMinerListJustChanged != false) {
        IsMinerListJustChanged = other.IsMinerListJustChanged;
      }
      if (other.RoundIdForValidation != 0L) {
        RoundIdForValidation = other.RoundIdForValidation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 18: {
            realTimeMinersInformation_.AddEntriesFrom(input, _map_realTimeMinersInformation_codec);
            break;
          }
          case 24: {
            MainChainMinersRoundNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockchainAge = input.ReadInt64();
            break;
          }
          case 42: {
            ExtraBlockProducerOfPreviousRound = input.ReadString();
            break;
          }
          case 48: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 56: {
            ConfirmedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 64: {
            ConfirmedIrreversibleBlockRoundNumber = input.ReadInt64();
            break;
          }
          case 72: {
            IsMinerListJustChanged = input.ReadBool();
            break;
          }
          case 80: {
            RoundIdForValidation = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 18: {
            realTimeMinersInformation_.AddEntriesFrom(ref input, _map_realTimeMinersInformation_codec);
            break;
          }
          case 24: {
            MainChainMinersRoundNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockchainAge = input.ReadInt64();
            break;
          }
          case 42: {
            ExtraBlockProducerOfPreviousRound = input.ReadString();
            break;
          }
          case 48: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 56: {
            ConfirmedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 64: {
            ConfirmedIrreversibleBlockRoundNumber = input.ReadInt64();
            break;
          }
          case 72: {
            IsMinerListJustChanged = input.ReadBool();
            break;
          }
          case 80: {
            RoundIdForValidation = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MinerInRound : pb::IMessage<MinerInRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinerInRound> _parser = new pb::MessageParser<MinerInRound>(() => new MinerInRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MinerInRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerInRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerInRound(MinerInRound other) : this() {
      order_ = other.order_;
      isExtraBlockProducer_ = other.isExtraBlockProducer_;
      inValue_ = other.inValue_ != null ? other.inValue_.Clone() : null;
      outValue_ = other.outValue_ != null ? other.outValue_.Clone() : null;
      signature_ = other.signature_ != null ? other.signature_.Clone() : null;
      expectedMiningTime_ = other.expectedMiningTime_ != null ? other.expectedMiningTime_.Clone() : null;
      producedBlocks_ = other.producedBlocks_;
      missedTimeSlots_ = other.missedTimeSlots_;
      pubkey_ = other.pubkey_;
      previousInValue_ = other.previousInValue_ != null ? other.previousInValue_.Clone() : null;
      supposedOrderOfNextRound_ = other.supposedOrderOfNextRound_;
      finalOrderOfNextRound_ = other.finalOrderOfNextRound_;
      actualMiningTimes_ = other.actualMiningTimes_.Clone();
      encryptedPieces_ = other.encryptedPieces_.Clone();
      decryptedPieces_ = other.decryptedPieces_.Clone();
      producedTinyBlocks_ = other.producedTinyBlocks_;
      impliedIrreversibleBlockHeight_ = other.impliedIrreversibleBlockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerInRound Clone() {
      return new MinerInRound(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private int order_;
    /// <summary>
    /// The order of the miner producing block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "is_extra_block_producer" field.</summary>
    public const int IsExtraBlockProducerFieldNumber = 2;
    private bool isExtraBlockProducer_;
    /// <summary>
    /// Is extra block producer in the current round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsExtraBlockProducer {
      get { return isExtraBlockProducer_; }
      set {
        isExtraBlockProducer_ = value;
      }
    }

    /// <summary>Field number for the "in_value" field.</summary>
    public const int InValueFieldNumber = 3;
    private global::AElf.Types.Hash inValue_;
    /// <summary>
    /// Generated by secret sharing and used for validation between miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash InValue {
      get { return inValue_; }
      set {
        inValue_ = value;
      }
    }

    /// <summary>Field number for the "out_value" field.</summary>
    public const int OutValueFieldNumber = 4;
    private global::AElf.Types.Hash outValue_;
    /// <summary>
    /// Calculated from current in value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash OutValue {
      get { return outValue_; }
      set {
        outValue_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 5;
    private global::AElf.Types.Hash signature_;
    /// <summary>
    /// Calculated from current in value and signatures of previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash Signature {
      get { return signature_; }
      set {
        signature_ = value;
      }
    }

    /// <summary>Field number for the "expected_mining_time" field.</summary>
    public const int ExpectedMiningTimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expectedMiningTime_;
    /// <summary>
    /// The expected mining time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ExpectedMiningTime {
      get { return expectedMiningTime_; }
      set {
        expectedMiningTime_ = value;
      }
    }

    /// <summary>Field number for the "produced_blocks" field.</summary>
    public const int ProducedBlocksFieldNumber = 7;
    private long producedBlocks_;
    /// <summary>
    /// The amount of produced blocks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProducedBlocks {
      get { return producedBlocks_; }
      set {
        producedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "missed_time_slots" field.</summary>
    public const int MissedTimeSlotsFieldNumber = 8;
    private long missedTimeSlots_;
    /// <summary>
    /// The amount of missed time slots.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MissedTimeSlots {
      get { return missedTimeSlots_; }
      set {
        missedTimeSlots_ = value;
      }
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 9;
    private string pubkey_ = "";
    /// <summary>
    /// The public key of this miner.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "previous_in_value" field.</summary>
    public const int PreviousInValueFieldNumber = 10;
    private global::AElf.Types.Hash previousInValue_;
    /// <summary>
    /// The InValue of the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PreviousInValue {
      get { return previousInValue_; }
      set {
        previousInValue_ = value;
      }
    }

    /// <summary>Field number for the "supposed_order_of_next_round" field.</summary>
    public const int SupposedOrderOfNextRoundFieldNumber = 11;
    private int supposedOrderOfNextRound_;
    /// <summary>
    /// The supposed order of mining for the next round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SupposedOrderOfNextRound {
      get { return supposedOrderOfNextRound_; }
      set {
        supposedOrderOfNextRound_ = value;
      }
    }

    /// <summary>Field number for the "final_order_of_next_round" field.</summary>
    public const int FinalOrderOfNextRoundFieldNumber = 12;
    private int finalOrderOfNextRound_;
    /// <summary>
    /// The final order of mining for the next round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FinalOrderOfNextRound {
      get { return finalOrderOfNextRound_; }
      set {
        finalOrderOfNextRound_ = value;
      }
    }

    /// <summary>Field number for the "actual_mining_times" field.</summary>
    public const int ActualMiningTimesFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_actualMiningTimes_codec
        = pb::FieldCodec.ForMessage(106, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> actualMiningTimes_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    /// <summary>
    /// The actual mining time, miners must fill actual mining time when they do the mining.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> ActualMiningTimes {
      get { return actualMiningTimes_; }
    }

    /// <summary>Field number for the "encrypted_pieces" field.</summary>
    public const int EncryptedPiecesFieldNumber = 14;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_encryptedPieces_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 114);
    private readonly pbc::MapField<string, pb::ByteString> encryptedPieces_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// The encrypted pieces of InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, pb::ByteString> EncryptedPieces {
      get { return encryptedPieces_; }
    }

    /// <summary>Field number for the "decrypted_pieces" field.</summary>
    public const int DecryptedPiecesFieldNumber = 15;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_decryptedPieces_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 122);
    private readonly pbc::MapField<string, pb::ByteString> decryptedPieces_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// The decrypted pieces of InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, pb::ByteString> DecryptedPieces {
      get { return decryptedPieces_; }
    }

    /// <summary>Field number for the "produced_tiny_blocks" field.</summary>
    public const int ProducedTinyBlocksFieldNumber = 16;
    private long producedTinyBlocks_;
    /// <summary>
    /// The amount of produced tiny blocks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProducedTinyBlocks {
      get { return producedTinyBlocks_; }
      set {
        producedTinyBlocks_ = value;
      }
    }

    /// <summary>Field number for the "implied_irreversible_block_height" field.</summary>
    public const int ImpliedIrreversibleBlockHeightFieldNumber = 17;
    private long impliedIrreversibleBlockHeight_;
    /// <summary>
    /// The irreversible block height that current miner recorded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ImpliedIrreversibleBlockHeight {
      get { return impliedIrreversibleBlockHeight_; }
      set {
        impliedIrreversibleBlockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MinerInRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MinerInRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Order != other.Order) return false;
      if (IsExtraBlockProducer != other.IsExtraBlockProducer) return false;
      if (!object.Equals(InValue, other.InValue)) return false;
      if (!object.Equals(OutValue, other.OutValue)) return false;
      if (!object.Equals(Signature, other.Signature)) return false;
      if (!object.Equals(ExpectedMiningTime, other.ExpectedMiningTime)) return false;
      if (ProducedBlocks != other.ProducedBlocks) return false;
      if (MissedTimeSlots != other.MissedTimeSlots) return false;
      if (Pubkey != other.Pubkey) return false;
      if (!object.Equals(PreviousInValue, other.PreviousInValue)) return false;
      if (SupposedOrderOfNextRound != other.SupposedOrderOfNextRound) return false;
      if (FinalOrderOfNextRound != other.FinalOrderOfNextRound) return false;
      if(!actualMiningTimes_.Equals(other.actualMiningTimes_)) return false;
      if (!EncryptedPieces.Equals(other.EncryptedPieces)) return false;
      if (!DecryptedPieces.Equals(other.DecryptedPieces)) return false;
      if (ProducedTinyBlocks != other.ProducedTinyBlocks) return false;
      if (ImpliedIrreversibleBlockHeight != other.ImpliedIrreversibleBlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Order != 0) hash ^= Order.GetHashCode();
      if (IsExtraBlockProducer != false) hash ^= IsExtraBlockProducer.GetHashCode();
      if (inValue_ != null) hash ^= InValue.GetHashCode();
      if (outValue_ != null) hash ^= OutValue.GetHashCode();
      if (signature_ != null) hash ^= Signature.GetHashCode();
      if (expectedMiningTime_ != null) hash ^= ExpectedMiningTime.GetHashCode();
      if (ProducedBlocks != 0L) hash ^= ProducedBlocks.GetHashCode();
      if (MissedTimeSlots != 0L) hash ^= MissedTimeSlots.GetHashCode();
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (previousInValue_ != null) hash ^= PreviousInValue.GetHashCode();
      if (SupposedOrderOfNextRound != 0) hash ^= SupposedOrderOfNextRound.GetHashCode();
      if (FinalOrderOfNextRound != 0) hash ^= FinalOrderOfNextRound.GetHashCode();
      hash ^= actualMiningTimes_.GetHashCode();
      hash ^= EncryptedPieces.GetHashCode();
      hash ^= DecryptedPieces.GetHashCode();
      if (ProducedTinyBlocks != 0L) hash ^= ProducedTinyBlocks.GetHashCode();
      if (ImpliedIrreversibleBlockHeight != 0L) hash ^= ImpliedIrreversibleBlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Order != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Order);
      }
      if (IsExtraBlockProducer != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsExtraBlockProducer);
      }
      if (inValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InValue);
      }
      if (outValue_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutValue);
      }
      if (signature_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Signature);
      }
      if (expectedMiningTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpectedMiningTime);
      }
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MissedTimeSlots);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Pubkey);
      }
      if (previousInValue_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PreviousInValue);
      }
      if (SupposedOrderOfNextRound != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SupposedOrderOfNextRound);
      }
      if (FinalOrderOfNextRound != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(FinalOrderOfNextRound);
      }
      actualMiningTimes_.WriteTo(output, _repeated_actualMiningTimes_codec);
      encryptedPieces_.WriteTo(output, _map_encryptedPieces_codec);
      decryptedPieces_.WriteTo(output, _map_decryptedPieces_codec);
      if (ProducedTinyBlocks != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(ProducedTinyBlocks);
      }
      if (ImpliedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(ImpliedIrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Order != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Order);
      }
      if (IsExtraBlockProducer != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsExtraBlockProducer);
      }
      if (inValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InValue);
      }
      if (outValue_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutValue);
      }
      if (signature_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Signature);
      }
      if (expectedMiningTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExpectedMiningTime);
      }
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(MissedTimeSlots);
      }
      if (Pubkey.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Pubkey);
      }
      if (previousInValue_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PreviousInValue);
      }
      if (SupposedOrderOfNextRound != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(SupposedOrderOfNextRound);
      }
      if (FinalOrderOfNextRound != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(FinalOrderOfNextRound);
      }
      actualMiningTimes_.WriteTo(ref output, _repeated_actualMiningTimes_codec);
      encryptedPieces_.WriteTo(ref output, _map_encryptedPieces_codec);
      decryptedPieces_.WriteTo(ref output, _map_decryptedPieces_codec);
      if (ProducedTinyBlocks != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(ProducedTinyBlocks);
      }
      if (ImpliedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(ImpliedIrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (IsExtraBlockProducer != false) {
        size += 1 + 1;
      }
      if (inValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InValue);
      }
      if (outValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutValue);
      }
      if (signature_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signature);
      }
      if (expectedMiningTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpectedMiningTime);
      }
      if (ProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProducedBlocks);
      }
      if (MissedTimeSlots != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MissedTimeSlots);
      }
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (previousInValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousInValue);
      }
      if (SupposedOrderOfNextRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SupposedOrderOfNextRound);
      }
      if (FinalOrderOfNextRound != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FinalOrderOfNextRound);
      }
      size += actualMiningTimes_.CalculateSize(_repeated_actualMiningTimes_codec);
      size += encryptedPieces_.CalculateSize(_map_encryptedPieces_codec);
      size += decryptedPieces_.CalculateSize(_map_decryptedPieces_codec);
      if (ProducedTinyBlocks != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ProducedTinyBlocks);
      }
      if (ImpliedIrreversibleBlockHeight != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ImpliedIrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MinerInRound other) {
      if (other == null) {
        return;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.IsExtraBlockProducer != false) {
        IsExtraBlockProducer = other.IsExtraBlockProducer;
      }
      if (other.inValue_ != null) {
        if (inValue_ == null) {
          InValue = new global::AElf.Types.Hash();
        }
        InValue.MergeFrom(other.InValue);
      }
      if (other.outValue_ != null) {
        if (outValue_ == null) {
          OutValue = new global::AElf.Types.Hash();
        }
        OutValue.MergeFrom(other.OutValue);
      }
      if (other.signature_ != null) {
        if (signature_ == null) {
          Signature = new global::AElf.Types.Hash();
        }
        Signature.MergeFrom(other.Signature);
      }
      if (other.expectedMiningTime_ != null) {
        if (expectedMiningTime_ == null) {
          ExpectedMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ExpectedMiningTime.MergeFrom(other.ExpectedMiningTime);
      }
      if (other.ProducedBlocks != 0L) {
        ProducedBlocks = other.ProducedBlocks;
      }
      if (other.MissedTimeSlots != 0L) {
        MissedTimeSlots = other.MissedTimeSlots;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.previousInValue_ != null) {
        if (previousInValue_ == null) {
          PreviousInValue = new global::AElf.Types.Hash();
        }
        PreviousInValue.MergeFrom(other.PreviousInValue);
      }
      if (other.SupposedOrderOfNextRound != 0) {
        SupposedOrderOfNextRound = other.SupposedOrderOfNextRound;
      }
      if (other.FinalOrderOfNextRound != 0) {
        FinalOrderOfNextRound = other.FinalOrderOfNextRound;
      }
      actualMiningTimes_.Add(other.actualMiningTimes_);
      encryptedPieces_.Add(other.encryptedPieces_);
      decryptedPieces_.Add(other.decryptedPieces_);
      if (other.ProducedTinyBlocks != 0L) {
        ProducedTinyBlocks = other.ProducedTinyBlocks;
      }
      if (other.ImpliedIrreversibleBlockHeight != 0L) {
        ImpliedIrreversibleBlockHeight = other.ImpliedIrreversibleBlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Order = input.ReadInt32();
            break;
          }
          case 16: {
            IsExtraBlockProducer = input.ReadBool();
            break;
          }
          case 26: {
            if (inValue_ == null) {
              InValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(InValue);
            break;
          }
          case 34: {
            if (outValue_ == null) {
              OutValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OutValue);
            break;
          }
          case 42: {
            if (signature_ == null) {
              Signature = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Signature);
            break;
          }
          case 50: {
            if (expectedMiningTime_ == null) {
              ExpectedMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpectedMiningTime);
            break;
          }
          case 56: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 64: {
            MissedTimeSlots = input.ReadInt64();
            break;
          }
          case 74: {
            Pubkey = input.ReadString();
            break;
          }
          case 82: {
            if (previousInValue_ == null) {
              PreviousInValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousInValue);
            break;
          }
          case 88: {
            SupposedOrderOfNextRound = input.ReadInt32();
            break;
          }
          case 96: {
            FinalOrderOfNextRound = input.ReadInt32();
            break;
          }
          case 106: {
            actualMiningTimes_.AddEntriesFrom(input, _repeated_actualMiningTimes_codec);
            break;
          }
          case 114: {
            encryptedPieces_.AddEntriesFrom(input, _map_encryptedPieces_codec);
            break;
          }
          case 122: {
            decryptedPieces_.AddEntriesFrom(input, _map_decryptedPieces_codec);
            break;
          }
          case 128: {
            ProducedTinyBlocks = input.ReadInt64();
            break;
          }
          case 136: {
            ImpliedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Order = input.ReadInt32();
            break;
          }
          case 16: {
            IsExtraBlockProducer = input.ReadBool();
            break;
          }
          case 26: {
            if (inValue_ == null) {
              InValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(InValue);
            break;
          }
          case 34: {
            if (outValue_ == null) {
              OutValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(OutValue);
            break;
          }
          case 42: {
            if (signature_ == null) {
              Signature = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Signature);
            break;
          }
          case 50: {
            if (expectedMiningTime_ == null) {
              ExpectedMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ExpectedMiningTime);
            break;
          }
          case 56: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 64: {
            MissedTimeSlots = input.ReadInt64();
            break;
          }
          case 74: {
            Pubkey = input.ReadString();
            break;
          }
          case 82: {
            if (previousInValue_ == null) {
              PreviousInValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousInValue);
            break;
          }
          case 88: {
            SupposedOrderOfNextRound = input.ReadInt32();
            break;
          }
          case 96: {
            FinalOrderOfNextRound = input.ReadInt32();
            break;
          }
          case 106: {
            actualMiningTimes_.AddEntriesFrom(ref input, _repeated_actualMiningTimes_codec);
            break;
          }
          case 114: {
            encryptedPieces_.AddEntriesFrom(ref input, _map_encryptedPieces_codec);
            break;
          }
          case 122: {
            decryptedPieces_.AddEntriesFrom(ref input, _map_decryptedPieces_codec);
            break;
          }
          case 128: {
            ProducedTinyBlocks = input.ReadInt64();
            break;
          }
          case 136: {
            ImpliedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class AElfConsensusHeaderInformation : pb::IMessage<AElfConsensusHeaderInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AElfConsensusHeaderInformation> _parser = new pb::MessageParser<AElfConsensusHeaderInformation>(() => new AElfConsensusHeaderInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AElfConsensusHeaderInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusHeaderInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusHeaderInformation(AElfConsensusHeaderInformation other) : this() {
      senderPubkey_ = other.senderPubkey_;
      round_ = other.round_ != null ? other.round_.Clone() : null;
      behaviour_ = other.behaviour_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusHeaderInformation Clone() {
      return new AElfConsensusHeaderInformation(this);
    }

    /// <summary>Field number for the "sender_pubkey" field.</summary>
    public const int SenderPubkeyFieldNumber = 1;
    private pb::ByteString senderPubkey_ = pb::ByteString.Empty;
    /// <summary>
    /// The sender public key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SenderPubkey {
      get { return senderPubkey_; }
      set {
        senderPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "round" field.</summary>
    public const int RoundFieldNumber = 2;
    private global::AElf.Contracts.Consensus.AEDPoS.Round round_;
    /// <summary>
    /// The round information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.Consensus.AEDPoS.Round Round {
      get { return round_; }
      set {
        round_ = value;
      }
    }

    /// <summary>Field number for the "behaviour" field.</summary>
    public const int BehaviourFieldNumber = 3;
    private global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour behaviour_ = global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue;
    /// <summary>
    /// The behaviour of consensus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour Behaviour {
      get { return behaviour_; }
      set {
        behaviour_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AElfConsensusHeaderInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AElfConsensusHeaderInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderPubkey != other.SenderPubkey) return false;
      if (!object.Equals(Round, other.Round)) return false;
      if (Behaviour != other.Behaviour) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderPubkey.Length != 0) hash ^= SenderPubkey.GetHashCode();
      if (round_ != null) hash ^= Round.GetHashCode();
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) hash ^= Behaviour.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SenderPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SenderPubkey);
      }
      if (round_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Round);
      }
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Behaviour);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SenderPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SenderPubkey);
      }
      if (round_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Round);
      }
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Behaviour);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SenderPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SenderPubkey);
      }
      if (round_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Round);
      }
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Behaviour);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AElfConsensusHeaderInformation other) {
      if (other == null) {
        return;
      }
      if (other.SenderPubkey.Length != 0) {
        SenderPubkey = other.SenderPubkey;
      }
      if (other.round_ != null) {
        if (round_ == null) {
          Round = new global::AElf.Contracts.Consensus.AEDPoS.Round();
        }
        Round.MergeFrom(other.Round);
      }
      if (other.Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        Behaviour = other.Behaviour;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderPubkey = input.ReadBytes();
            break;
          }
          case 18: {
            if (round_ == null) {
              Round = new global::AElf.Contracts.Consensus.AEDPoS.Round();
            }
            input.ReadMessage(Round);
            break;
          }
          case 24: {
            Behaviour = (global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SenderPubkey = input.ReadBytes();
            break;
          }
          case 18: {
            if (round_ == null) {
              Round = new global::AElf.Contracts.Consensus.AEDPoS.Round();
            }
            input.ReadMessage(Round);
            break;
          }
          case 24: {
            Behaviour = (global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class AElfConsensusHint : pb::IMessage<AElfConsensusHint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AElfConsensusHint> _parser = new pb::MessageParser<AElfConsensusHint>(() => new AElfConsensusHint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AElfConsensusHint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusHint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusHint(AElfConsensusHint other) : this() {
      behaviour_ = other.behaviour_;
      roundId_ = other.roundId_;
      previousRoundId_ = other.previousRoundId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusHint Clone() {
      return new AElfConsensusHint(this);
    }

    /// <summary>Field number for the "behaviour" field.</summary>
    public const int BehaviourFieldNumber = 1;
    private global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour behaviour_ = global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue;
    /// <summary>
    /// The behaviour of consensus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour Behaviour {
      get { return behaviour_; }
      set {
        behaviour_ = value;
      }
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 2;
    private long roundId_;
    /// <summary>
    /// The round id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "previous_round_id" field.</summary>
    public const int PreviousRoundIdFieldNumber = 3;
    private long previousRoundId_;
    /// <summary>
    /// The previous round id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PreviousRoundId {
      get { return previousRoundId_; }
      set {
        previousRoundId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AElfConsensusHint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AElfConsensusHint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Behaviour != other.Behaviour) return false;
      if (RoundId != other.RoundId) return false;
      if (PreviousRoundId != other.PreviousRoundId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) hash ^= Behaviour.GetHashCode();
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (PreviousRoundId != 0L) hash ^= PreviousRoundId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Behaviour);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (PreviousRoundId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PreviousRoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Behaviour);
      }
      if (RoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundId);
      }
      if (PreviousRoundId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PreviousRoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Behaviour);
      }
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (PreviousRoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PreviousRoundId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AElfConsensusHint other) {
      if (other == null) {
        return;
      }
      if (other.Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        Behaviour = other.Behaviour;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.PreviousRoundId != 0L) {
        PreviousRoundId = other.PreviousRoundId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Behaviour = (global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour) input.ReadEnum();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 24: {
            PreviousRoundId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Behaviour = (global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour) input.ReadEnum();
            break;
          }
          case 16: {
            RoundId = input.ReadInt64();
            break;
          }
          case 24: {
            PreviousRoundId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class AElfConsensusTriggerInformation : pb::IMessage<AElfConsensusTriggerInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AElfConsensusTriggerInformation> _parser = new pb::MessageParser<AElfConsensusTriggerInformation>(() => new AElfConsensusTriggerInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AElfConsensusTriggerInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusTriggerInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusTriggerInformation(AElfConsensusTriggerInformation other) : this() {
      pubkey_ = other.pubkey_;
      inValue_ = other.inValue_ != null ? other.inValue_.Clone() : null;
      previousInValue_ = other.previousInValue_ != null ? other.previousInValue_.Clone() : null;
      behaviour_ = other.behaviour_;
      encryptedPieces_ = other.encryptedPieces_.Clone();
      decryptedPieces_ = other.decryptedPieces_.Clone();
      revealedInValues_ = other.revealedInValues_.Clone();
      randomNumber_ = other.randomNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AElfConsensusTriggerInformation Clone() {
      return new AElfConsensusTriggerInformation(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private pb::ByteString pubkey_ = pb::ByteString.Empty;
    /// <summary>
    /// The miner public key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "in_value" field.</summary>
    public const int InValueFieldNumber = 2;
    private global::AElf.Types.Hash inValue_;
    /// <summary>
    /// The InValue for current round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash InValue {
      get { return inValue_; }
      set {
        inValue_ = value;
      }
    }

    /// <summary>Field number for the "previous_in_value" field.</summary>
    public const int PreviousInValueFieldNumber = 3;
    private global::AElf.Types.Hash previousInValue_;
    /// <summary>
    /// The InValue for previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PreviousInValue {
      get { return previousInValue_; }
      set {
        previousInValue_ = value;
      }
    }

    /// <summary>Field number for the "behaviour" field.</summary>
    public const int BehaviourFieldNumber = 4;
    private global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour behaviour_ = global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue;
    /// <summary>
    /// The behaviour of consensus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour Behaviour {
      get { return behaviour_; }
      set {
        behaviour_ = value;
      }
    }

    /// <summary>Field number for the "encrypted_pieces" field.</summary>
    public const int EncryptedPiecesFieldNumber = 5;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_encryptedPieces_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 42);
    private readonly pbc::MapField<string, pb::ByteString> encryptedPieces_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// The encrypted pieces of InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, pb::ByteString> EncryptedPieces {
      get { return encryptedPieces_; }
    }

    /// <summary>Field number for the "decrypted_pieces" field.</summary>
    public const int DecryptedPiecesFieldNumber = 6;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_decryptedPieces_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBytes(18, pb::ByteString.Empty), 50);
    private readonly pbc::MapField<string, pb::ByteString> decryptedPieces_ = new pbc::MapField<string, pb::ByteString>();
    /// <summary>
    /// The decrypted pieces of InValue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, pb::ByteString> DecryptedPieces {
      get { return decryptedPieces_; }
    }

    /// <summary>Field number for the "revealed_in_values" field.</summary>
    public const int RevealedInValuesFieldNumber = 7;
    private static readonly pbc::MapField<string, global::AElf.Types.Hash>.Codec _map_revealedInValues_codec
        = new pbc::MapField<string, global::AElf.Types.Hash>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::AElf.Types.Hash.Parser), 58);
    private readonly pbc::MapField<string, global::AElf.Types.Hash> revealedInValues_ = new pbc::MapField<string, global::AElf.Types.Hash>();
    /// <summary>
    /// The revealed InValues.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::AElf.Types.Hash> RevealedInValues {
      get { return revealedInValues_; }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 8;
    private pb::ByteString randomNumber_ = pb::ByteString.Empty;
    /// <summary>
    /// The random number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AElfConsensusTriggerInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AElfConsensusTriggerInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (!object.Equals(InValue, other.InValue)) return false;
      if (!object.Equals(PreviousInValue, other.PreviousInValue)) return false;
      if (Behaviour != other.Behaviour) return false;
      if (!EncryptedPieces.Equals(other.EncryptedPieces)) return false;
      if (!DecryptedPieces.Equals(other.DecryptedPieces)) return false;
      if (!RevealedInValues.Equals(other.RevealedInValues)) return false;
      if (RandomNumber != other.RandomNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (inValue_ != null) hash ^= InValue.GetHashCode();
      if (previousInValue_ != null) hash ^= PreviousInValue.GetHashCode();
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) hash ^= Behaviour.GetHashCode();
      hash ^= EncryptedPieces.GetHashCode();
      hash ^= DecryptedPieces.GetHashCode();
      hash ^= RevealedInValues.GetHashCode();
      if (RandomNumber.Length != 0) hash ^= RandomNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Pubkey);
      }
      if (inValue_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InValue);
      }
      if (previousInValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreviousInValue);
      }
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Behaviour);
      }
      encryptedPieces_.WriteTo(output, _map_encryptedPieces_codec);
      decryptedPieces_.WriteTo(output, _map_decryptedPieces_codec);
      revealedInValues_.WriteTo(output, _map_revealedInValues_codec);
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Pubkey);
      }
      if (inValue_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InValue);
      }
      if (previousInValue_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreviousInValue);
      }
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Behaviour);
      }
      encryptedPieces_.WriteTo(ref output, _map_encryptedPieces_codec);
      decryptedPieces_.WriteTo(ref output, _map_decryptedPieces_codec);
      revealedInValues_.WriteTo(ref output, _map_revealedInValues_codec);
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Pubkey);
      }
      if (inValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InValue);
      }
      if (previousInValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousInValue);
      }
      if (Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Behaviour);
      }
      size += encryptedPieces_.CalculateSize(_map_encryptedPieces_codec);
      size += decryptedPieces_.CalculateSize(_map_decryptedPieces_codec);
      size += revealedInValues_.CalculateSize(_map_revealedInValues_codec);
      if (RandomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RandomNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AElfConsensusTriggerInformation other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.inValue_ != null) {
        if (inValue_ == null) {
          InValue = new global::AElf.Types.Hash();
        }
        InValue.MergeFrom(other.InValue);
      }
      if (other.previousInValue_ != null) {
        if (previousInValue_ == null) {
          PreviousInValue = new global::AElf.Types.Hash();
        }
        PreviousInValue.MergeFrom(other.PreviousInValue);
      }
      if (other.Behaviour != global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour.UpdateValue) {
        Behaviour = other.Behaviour;
      }
      encryptedPieces_.Add(other.encryptedPieces_);
      decryptedPieces_.Add(other.decryptedPieces_);
      revealedInValues_.Add(other.revealedInValues_);
      if (other.RandomNumber.Length != 0) {
        RandomNumber = other.RandomNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadBytes();
            break;
          }
          case 18: {
            if (inValue_ == null) {
              InValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(InValue);
            break;
          }
          case 26: {
            if (previousInValue_ == null) {
              PreviousInValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousInValue);
            break;
          }
          case 32: {
            Behaviour = (global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour) input.ReadEnum();
            break;
          }
          case 42: {
            encryptedPieces_.AddEntriesFrom(input, _map_encryptedPieces_codec);
            break;
          }
          case 50: {
            decryptedPieces_.AddEntriesFrom(input, _map_decryptedPieces_codec);
            break;
          }
          case 58: {
            revealedInValues_.AddEntriesFrom(input, _map_revealedInValues_codec);
            break;
          }
          case 66: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Pubkey = input.ReadBytes();
            break;
          }
          case 18: {
            if (inValue_ == null) {
              InValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(InValue);
            break;
          }
          case 26: {
            if (previousInValue_ == null) {
              PreviousInValue = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousInValue);
            break;
          }
          case 32: {
            Behaviour = (global::AElf.Contracts.Consensus.AEDPoS.AElfConsensusBehaviour) input.ReadEnum();
            break;
          }
          case 42: {
            encryptedPieces_.AddEntriesFrom(ref input, _map_encryptedPieces_codec);
            break;
          }
          case 50: {
            decryptedPieces_.AddEntriesFrom(ref input, _map_decryptedPieces_codec);
            break;
          }
          case 58: {
            revealedInValues_.AddEntriesFrom(ref input, _map_revealedInValues_codec);
            break;
          }
          case 66: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TermInfo : pb::IMessage<TermInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TermInfo> _parser = new pb::MessageParser<TermInfo>(() => new TermInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TermInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TermInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TermInfo(TermInfo other) : this() {
      termNumber_ = other.termNumber_;
      roundNumber_ = other.roundNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TermInfo Clone() {
      return new TermInfo(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 2;
    private long roundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TermInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TermInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      if (RoundNumber != other.RoundNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TermInfo other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 16: {
            RoundNumber = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 16: {
            RoundNumber = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MinerListWithRoundNumber : pb::IMessage<MinerListWithRoundNumber>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinerListWithRoundNumber> _parser = new pb::MessageParser<MinerListWithRoundNumber>(() => new MinerListWithRoundNumber());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MinerListWithRoundNumber> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerListWithRoundNumber() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerListWithRoundNumber(MinerListWithRoundNumber other) : this() {
      minerList_ = other.minerList_ != null ? other.minerList_.Clone() : null;
      roundNumber_ = other.roundNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerListWithRoundNumber Clone() {
      return new MinerListWithRoundNumber(this);
    }

    /// <summary>Field number for the "miner_list" field.</summary>
    public const int MinerListFieldNumber = 1;
    private global::AElf.Contracts.Consensus.AEDPoS.MinerList minerList_;
    /// <summary>
    /// The list of miners.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.Consensus.AEDPoS.MinerList MinerList {
      get { return minerList_; }
      set {
        minerList_ = value;
      }
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 2;
    private long roundNumber_;
    /// <summary>
    /// The round number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MinerListWithRoundNumber);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MinerListWithRoundNumber other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MinerList, other.MinerList)) return false;
      if (RoundNumber != other.RoundNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (minerList_ != null) hash ^= MinerList.GetHashCode();
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (minerList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinerList);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (minerList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinerList);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RoundNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (minerList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinerList);
      }
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MinerListWithRoundNumber other) {
      if (other == null) {
        return;
      }
      if (other.minerList_ != null) {
        if (minerList_ == null) {
          MinerList = new global::AElf.Contracts.Consensus.AEDPoS.MinerList();
        }
        MinerList.MergeFrom(other.MinerList);
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (minerList_ == null) {
              MinerList = new global::AElf.Contracts.Consensus.AEDPoS.MinerList();
            }
            input.ReadMessage(MinerList);
            break;
          }
          case 16: {
            RoundNumber = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (minerList_ == null) {
              MinerList = new global::AElf.Contracts.Consensus.AEDPoS.MinerList();
            }
            input.ReadMessage(MinerList);
            break;
          }
          case 16: {
            RoundNumber = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class TinyBlockInput : pb::IMessage<TinyBlockInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TinyBlockInput> _parser = new pb::MessageParser<TinyBlockInput>(() => new TinyBlockInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TinyBlockInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TinyBlockInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TinyBlockInput(TinyBlockInput other) : this() {
      roundId_ = other.roundId_;
      actualMiningTime_ = other.actualMiningTime_ != null ? other.actualMiningTime_.Clone() : null;
      producedBlocks_ = other.producedBlocks_;
      randomNumber_ = other.randomNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TinyBlockInput Clone() {
      return new TinyBlockInput(this);
    }

    /// <summary>Field number for the "round_id" field.</summary>
    public const int RoundIdFieldNumber = 1;
    private long roundId_;
    /// <summary>
    /// The round id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundId {
      get { return roundId_; }
      set {
        roundId_ = value;
      }
    }

    /// <summary>Field number for the "actual_mining_time" field.</summary>
    public const int ActualMiningTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp actualMiningTime_;
    /// <summary>
    /// The actual mining time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualMiningTime {
      get { return actualMiningTime_; }
      set {
        actualMiningTime_ = value;
      }
    }

    /// <summary>Field number for the "produced_blocks" field.</summary>
    public const int ProducedBlocksFieldNumber = 3;
    private long producedBlocks_;
    /// <summary>
    /// Count of blocks currently produced
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ProducedBlocks {
      get { return producedBlocks_; }
      set {
        producedBlocks_ = value;
      }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 4;
    private pb::ByteString randomNumber_ = pb::ByteString.Empty;
    /// <summary>
    /// The random number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TinyBlockInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TinyBlockInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundId != other.RoundId) return false;
      if (!object.Equals(ActualMiningTime, other.ActualMiningTime)) return false;
      if (ProducedBlocks != other.ProducedBlocks) return false;
      if (RandomNumber != other.RandomNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundId != 0L) hash ^= RoundId.GetHashCode();
      if (actualMiningTime_ != null) hash ^= ActualMiningTime.GetHashCode();
      if (ProducedBlocks != 0L) hash ^= ProducedBlocks.GetHashCode();
      if (RandomNumber.Length != 0) hash ^= RandomNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundId);
      }
      if (actualMiningTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActualMiningTime);
      }
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProducedBlocks);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundId);
      }
      if (actualMiningTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ActualMiningTime);
      }
      if (ProducedBlocks != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ProducedBlocks);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundId);
      }
      if (actualMiningTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualMiningTime);
      }
      if (ProducedBlocks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProducedBlocks);
      }
      if (RandomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RandomNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TinyBlockInput other) {
      if (other == null) {
        return;
      }
      if (other.RoundId != 0L) {
        RoundId = other.RoundId;
      }
      if (other.actualMiningTime_ != null) {
        if (actualMiningTime_ == null) {
          ActualMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ActualMiningTime.MergeFrom(other.ActualMiningTime);
      }
      if (other.ProducedBlocks != 0L) {
        ProducedBlocks = other.ProducedBlocks;
      }
      if (other.RandomNumber.Length != 0) {
        RandomNumber = other.RandomNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundId = input.ReadInt64();
            break;
          }
          case 18: {
            if (actualMiningTime_ == null) {
              ActualMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualMiningTime);
            break;
          }
          case 24: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 34: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundId = input.ReadInt64();
            break;
          }
          case 18: {
            if (actualMiningTime_ == null) {
              ActualMiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ActualMiningTime);
            break;
          }
          case 24: {
            ProducedBlocks = input.ReadInt64();
            break;
          }
          case 34: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class VoteMinersCountInput : pb::IMessage<VoteMinersCountInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VoteMinersCountInput> _parser = new pb::MessageParser<VoteMinersCountInput>(() => new VoteMinersCountInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VoteMinersCountInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoteMinersCountInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoteMinersCountInput(VoteMinersCountInput other) : this() {
      minersCount_ = other.minersCount_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoteMinersCountInput Clone() {
      return new VoteMinersCountInput(this);
    }

    /// <summary>Field number for the "miners_count" field.</summary>
    public const int MinersCountFieldNumber = 1;
    private int minersCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinersCount {
      get { return minersCount_; }
      set {
        minersCount_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VoteMinersCountInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VoteMinersCountInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinersCount != other.MinersCount) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MinersCount != 0) hash ^= MinersCount.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MinersCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinersCount);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MinersCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MinersCount);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MinersCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinersCount);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VoteMinersCountInput other) {
      if (other == null) {
        return;
      }
      if (other.MinersCount != 0) {
        MinersCount = other.MinersCount;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinersCount = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinersCount = input.ReadInt32();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class ConsensusInformation : pb::IMessage<ConsensusInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ConsensusInformation> _parser = new pb::MessageParser<ConsensusInformation>(() => new ConsensusInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ConsensusInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsensusInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsensusInformation(ConsensusInformation other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ConsensusInformation Clone() {
      return new ConsensusInformation(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ConsensusInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ConsensusInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ConsensusInformation other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class GetMinerListInput : pb::IMessage<GetMinerListInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMinerListInput> _parser = new pb::MessageParser<GetMinerListInput>(() => new GetMinerListInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMinerListInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMinerListInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMinerListInput(GetMinerListInput other) : this() {
      termNumber_ = other.termNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMinerListInput Clone() {
      return new GetMinerListInput(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    /// <summary>
    /// The term number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMinerListInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMinerListInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMinerListInput other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class RandomNumberRequestInformation : pb::IMessage<RandomNumberRequestInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomNumberRequestInformation> _parser = new pb::MessageParser<RandomNumberRequestInformation>(() => new RandomNumberRequestInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RandomNumberRequestInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomNumberRequestInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomNumberRequestInformation(RandomNumberRequestInformation other) : this() {
      targetRoundNumber_ = other.targetRoundNumber_;
      order_ = other.order_;
      expectedBlockHeight_ = other.expectedBlockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomNumberRequestInformation Clone() {
      return new RandomNumberRequestInformation(this);
    }

    /// <summary>Field number for the "target_round_number" field.</summary>
    public const int TargetRoundNumberFieldNumber = 1;
    private long targetRoundNumber_;
    /// <summary>
    /// The random hash is likely generated during this round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TargetRoundNumber {
      get { return targetRoundNumber_; }
      set {
        targetRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 2;
    private long order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "expected_block_height" field.</summary>
    public const int ExpectedBlockHeightFieldNumber = 3;
    private long expectedBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ExpectedBlockHeight {
      get { return expectedBlockHeight_; }
      set {
        expectedBlockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RandomNumberRequestInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RandomNumberRequestInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetRoundNumber != other.TargetRoundNumber) return false;
      if (Order != other.Order) return false;
      if (ExpectedBlockHeight != other.ExpectedBlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetRoundNumber != 0L) hash ^= TargetRoundNumber.GetHashCode();
      if (Order != 0L) hash ^= Order.GetHashCode();
      if (ExpectedBlockHeight != 0L) hash ^= ExpectedBlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TargetRoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetRoundNumber);
      }
      if (Order != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Order);
      }
      if (ExpectedBlockHeight != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpectedBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TargetRoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TargetRoundNumber);
      }
      if (Order != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Order);
      }
      if (ExpectedBlockHeight != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpectedBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TargetRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetRoundNumber);
      }
      if (Order != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Order);
      }
      if (ExpectedBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpectedBlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RandomNumberRequestInformation other) {
      if (other == null) {
        return;
      }
      if (other.TargetRoundNumber != 0L) {
        TargetRoundNumber = other.TargetRoundNumber;
      }
      if (other.Order != 0L) {
        Order = other.Order;
      }
      if (other.ExpectedBlockHeight != 0L) {
        ExpectedBlockHeight = other.ExpectedBlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TargetRoundNumber = input.ReadInt64();
            break;
          }
          case 16: {
            Order = input.ReadInt64();
            break;
          }
          case 24: {
            ExpectedBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TargetRoundNumber = input.ReadInt64();
            break;
          }
          case 16: {
            Order = input.ReadInt64();
            break;
          }
          case 24: {
            ExpectedBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class HashList : pb::IMessage<HashList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HashList> _parser = new pb::MessageParser<HashList>(() => new HashList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HashList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HashList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HashList(HashList other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HashList Clone() {
      return new HashList(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::AElf.Types.Hash> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::AElf.Types.Hash.Parser);
    private readonly pbc::RepeatedField<global::AElf.Types.Hash> values_ = new pbc::RepeatedField<global::AElf.Types.Hash>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::AElf.Types.Hash> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HashList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HashList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HashList other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class LatestPubkeyToTinyBlocksCount : pb::IMessage<LatestPubkeyToTinyBlocksCount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LatestPubkeyToTinyBlocksCount> _parser = new pb::MessageParser<LatestPubkeyToTinyBlocksCount>(() => new LatestPubkeyToTinyBlocksCount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LatestPubkeyToTinyBlocksCount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LatestPubkeyToTinyBlocksCount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LatestPubkeyToTinyBlocksCount(LatestPubkeyToTinyBlocksCount other) : this() {
      pubkey_ = other.pubkey_;
      blocksCount_ = other.blocksCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LatestPubkeyToTinyBlocksCount Clone() {
      return new LatestPubkeyToTinyBlocksCount(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    /// <summary>
    /// The miner public key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blocks_count" field.</summary>
    public const int BlocksCountFieldNumber = 2;
    private long blocksCount_;
    /// <summary>
    /// The count of blocks the miner produced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlocksCount {
      get { return blocksCount_; }
      set {
        blocksCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LatestPubkeyToTinyBlocksCount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LatestPubkeyToTinyBlocksCount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (BlocksCount != other.BlocksCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (BlocksCount != 0L) hash ^= BlocksCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (BlocksCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BlocksCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (BlocksCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BlocksCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (BlocksCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlocksCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LatestPubkeyToTinyBlocksCount other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.BlocksCount != 0L) {
        BlocksCount = other.BlocksCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 16: {
            BlocksCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 16: {
            BlocksCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class IrreversibleBlockFound : pb::IMessage<IrreversibleBlockFound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IrreversibleBlockFound> _parser = new pb::MessageParser<IrreversibleBlockFound>(() => new IrreversibleBlockFound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IrreversibleBlockFound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrreversibleBlockFound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrreversibleBlockFound(IrreversibleBlockFound other) : this() {
      irreversibleBlockHeight_ = other.irreversibleBlockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrreversibleBlockFound Clone() {
      return new IrreversibleBlockFound(this);
    }

    /// <summary>Field number for the "irreversible_block_height" field.</summary>
    public const int IrreversibleBlockHeightFieldNumber = 1;
    private long irreversibleBlockHeight_;
    /// <summary>
    /// The irreversible block height found.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long IrreversibleBlockHeight {
      get { return irreversibleBlockHeight_; }
      set {
        irreversibleBlockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IrreversibleBlockFound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IrreversibleBlockFound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IrreversibleBlockHeight != other.IrreversibleBlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IrreversibleBlockHeight != 0L) hash ^= IrreversibleBlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IrreversibleBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IrreversibleBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IrreversibleBlockFound other) {
      if (other == null) {
        return;
      }
      if (other.IrreversibleBlockHeight != 0L) {
        IrreversibleBlockHeight = other.IrreversibleBlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IrreversibleBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IrreversibleBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class IrreversibleBlockHeightUnacceptable : pb::IMessage<IrreversibleBlockHeightUnacceptable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IrreversibleBlockHeightUnacceptable> _parser = new pb::MessageParser<IrreversibleBlockHeightUnacceptable>(() => new IrreversibleBlockHeightUnacceptable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IrreversibleBlockHeightUnacceptable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrreversibleBlockHeightUnacceptable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrreversibleBlockHeightUnacceptable(IrreversibleBlockHeightUnacceptable other) : this() {
      distanceToIrreversibleBlockHeight_ = other.distanceToIrreversibleBlockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IrreversibleBlockHeightUnacceptable Clone() {
      return new IrreversibleBlockHeightUnacceptable(this);
    }

    /// <summary>Field number for the "distance_to_irreversible_block_height" field.</summary>
    public const int DistanceToIrreversibleBlockHeightFieldNumber = 1;
    private long distanceToIrreversibleBlockHeight_;
    /// <summary>
    /// Distance to the height of the last irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DistanceToIrreversibleBlockHeight {
      get { return distanceToIrreversibleBlockHeight_; }
      set {
        distanceToIrreversibleBlockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IrreversibleBlockHeightUnacceptable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IrreversibleBlockHeightUnacceptable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DistanceToIrreversibleBlockHeight != other.DistanceToIrreversibleBlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DistanceToIrreversibleBlockHeight != 0L) hash ^= DistanceToIrreversibleBlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DistanceToIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DistanceToIrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DistanceToIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DistanceToIrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DistanceToIrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DistanceToIrreversibleBlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IrreversibleBlockHeightUnacceptable other) {
      if (other == null) {
        return;
      }
      if (other.DistanceToIrreversibleBlockHeight != 0L) {
        DistanceToIrreversibleBlockHeight = other.DistanceToIrreversibleBlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DistanceToIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DistanceToIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MiningInformationUpdated : pb::IMessage<MiningInformationUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiningInformationUpdated> _parser = new pb::MessageParser<MiningInformationUpdated>(() => new MiningInformationUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MiningInformationUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MiningInformationUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MiningInformationUpdated(MiningInformationUpdated other) : this() {
      pubkey_ = other.pubkey_;
      miningTime_ = other.miningTime_ != null ? other.miningTime_.Clone() : null;
      behaviour_ = other.behaviour_;
      blockHeight_ = other.blockHeight_;
      previousBlockHash_ = other.previousBlockHash_ != null ? other.previousBlockHash_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MiningInformationUpdated Clone() {
      return new MiningInformationUpdated(this);
    }

    /// <summary>Field number for the "pubkey" field.</summary>
    public const int PubkeyFieldNumber = 1;
    private string pubkey_ = "";
    /// <summary>
    /// The miner public key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Pubkey {
      get { return pubkey_; }
      set {
        pubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mining_time" field.</summary>
    public const int MiningTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp miningTime_;
    /// <summary>
    /// The current block time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MiningTime {
      get { return miningTime_; }
      set {
        miningTime_ = value;
      }
    }

    /// <summary>Field number for the "behaviour" field.</summary>
    public const int BehaviourFieldNumber = 3;
    private string behaviour_ = "";
    /// <summary>
    /// The behaviour of consensus.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Behaviour {
      get { return behaviour_; }
      set {
        behaviour_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 4;
    private long blockHeight_;
    /// <summary>
    /// The current block height.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "previous_block_hash" field.</summary>
    public const int PreviousBlockHashFieldNumber = 5;
    private global::AElf.Types.Hash previousBlockHash_;
    /// <summary>
    /// The previous block hash.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PreviousBlockHash {
      get { return previousBlockHash_; }
      set {
        previousBlockHash_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MiningInformationUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MiningInformationUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pubkey != other.Pubkey) return false;
      if (!object.Equals(MiningTime, other.MiningTime)) return false;
      if (Behaviour != other.Behaviour) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (!object.Equals(PreviousBlockHash, other.PreviousBlockHash)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Pubkey.Length != 0) hash ^= Pubkey.GetHashCode();
      if (miningTime_ != null) hash ^= MiningTime.GetHashCode();
      if (Behaviour.Length != 0) hash ^= Behaviour.GetHashCode();
      if (BlockHeight != 0L) hash ^= BlockHeight.GetHashCode();
      if (previousBlockHash_ != null) hash ^= PreviousBlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (miningTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MiningTime);
      }
      if (Behaviour.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Behaviour);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockHeight);
      }
      if (previousBlockHash_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PreviousBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Pubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pubkey);
      }
      if (miningTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MiningTime);
      }
      if (Behaviour.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Behaviour);
      }
      if (BlockHeight != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockHeight);
      }
      if (previousBlockHash_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PreviousBlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Pubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pubkey);
      }
      if (miningTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MiningTime);
      }
      if (Behaviour.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Behaviour);
      }
      if (BlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockHeight);
      }
      if (previousBlockHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousBlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MiningInformationUpdated other) {
      if (other == null) {
        return;
      }
      if (other.Pubkey.Length != 0) {
        Pubkey = other.Pubkey;
      }
      if (other.miningTime_ != null) {
        if (miningTime_ == null) {
          MiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MiningTime.MergeFrom(other.MiningTime);
      }
      if (other.Behaviour.Length != 0) {
        Behaviour = other.Behaviour;
      }
      if (other.BlockHeight != 0L) {
        BlockHeight = other.BlockHeight;
      }
      if (other.previousBlockHash_ != null) {
        if (previousBlockHash_ == null) {
          PreviousBlockHash = new global::AElf.Types.Hash();
        }
        PreviousBlockHash.MergeFrom(other.PreviousBlockHash);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 18: {
            if (miningTime_ == null) {
              MiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MiningTime);
            break;
          }
          case 26: {
            Behaviour = input.ReadString();
            break;
          }
          case 32: {
            BlockHeight = input.ReadInt64();
            break;
          }
          case 42: {
            if (previousBlockHash_ == null) {
              PreviousBlockHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousBlockHash);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Pubkey = input.ReadString();
            break;
          }
          case 18: {
            if (miningTime_ == null) {
              MiningTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MiningTime);
            break;
          }
          case 26: {
            Behaviour = input.ReadString();
            break;
          }
          case 32: {
            BlockHeight = input.ReadInt64();
            break;
          }
          case 42: {
            if (previousBlockHash_ == null) {
              PreviousBlockHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PreviousBlockHash);
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class SecretSharingInformation : pb::IMessage<SecretSharingInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SecretSharingInformation> _parser = new pb::MessageParser<SecretSharingInformation>(() => new SecretSharingInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SecretSharingInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecretSharingInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecretSharingInformation(SecretSharingInformation other) : this() {
      previousRound_ = other.previousRound_ != null ? other.previousRound_.Clone() : null;
      currentRoundId_ = other.currentRoundId_;
      previousRoundId_ = other.previousRoundId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SecretSharingInformation Clone() {
      return new SecretSharingInformation(this);
    }

    /// <summary>Field number for the "previous_round" field.</summary>
    public const int PreviousRoundFieldNumber = 1;
    private global::AElf.Contracts.Consensus.AEDPoS.Round previousRound_;
    /// <summary>
    /// The previous round information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Contracts.Consensus.AEDPoS.Round PreviousRound {
      get { return previousRound_; }
      set {
        previousRound_ = value;
      }
    }

    /// <summary>Field number for the "current_round_id" field.</summary>
    public const int CurrentRoundIdFieldNumber = 2;
    private long currentRoundId_;
    /// <summary>
    /// The current round id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrentRoundId {
      get { return currentRoundId_; }
      set {
        currentRoundId_ = value;
      }
    }

    /// <summary>Field number for the "previous_round_id" field.</summary>
    public const int PreviousRoundIdFieldNumber = 3;
    private long previousRoundId_;
    /// <summary>
    /// The previous round id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PreviousRoundId {
      get { return previousRoundId_; }
      set {
        previousRoundId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SecretSharingInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SecretSharingInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PreviousRound, other.PreviousRound)) return false;
      if (CurrentRoundId != other.CurrentRoundId) return false;
      if (PreviousRoundId != other.PreviousRoundId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (previousRound_ != null) hash ^= PreviousRound.GetHashCode();
      if (CurrentRoundId != 0L) hash ^= CurrentRoundId.GetHashCode();
      if (PreviousRoundId != 0L) hash ^= PreviousRoundId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (previousRound_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PreviousRound);
      }
      if (CurrentRoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentRoundId);
      }
      if (PreviousRoundId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PreviousRoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (previousRound_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PreviousRound);
      }
      if (CurrentRoundId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentRoundId);
      }
      if (PreviousRoundId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PreviousRoundId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (previousRound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviousRound);
      }
      if (CurrentRoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentRoundId);
      }
      if (PreviousRoundId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PreviousRoundId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SecretSharingInformation other) {
      if (other == null) {
        return;
      }
      if (other.previousRound_ != null) {
        if (previousRound_ == null) {
          PreviousRound = new global::AElf.Contracts.Consensus.AEDPoS.Round();
        }
        PreviousRound.MergeFrom(other.PreviousRound);
      }
      if (other.CurrentRoundId != 0L) {
        CurrentRoundId = other.CurrentRoundId;
      }
      if (other.PreviousRoundId != 0L) {
        PreviousRoundId = other.PreviousRoundId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (previousRound_ == null) {
              PreviousRound = new global::AElf.Contracts.Consensus.AEDPoS.Round();
            }
            input.ReadMessage(PreviousRound);
            break;
          }
          case 16: {
            CurrentRoundId = input.ReadInt64();
            break;
          }
          case 24: {
            PreviousRoundId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (previousRound_ == null) {
              PreviousRound = new global::AElf.Contracts.Consensus.AEDPoS.Round();
            }
            input.ReadMessage(PreviousRound);
            break;
          }
          case 16: {
            CurrentRoundId = input.ReadInt64();
            break;
          }
          case 24: {
            PreviousRoundId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MiningRewardGenerated : pb::IMessage<MiningRewardGenerated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiningRewardGenerated> _parser = new pb::MessageParser<MiningRewardGenerated>(() => new MiningRewardGenerated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MiningRewardGenerated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MiningRewardGenerated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MiningRewardGenerated(MiningRewardGenerated other) : this() {
      termNumber_ = other.termNumber_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MiningRewardGenerated Clone() {
      return new MiningRewardGenerated(this);
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 1;
    private long termNumber_;
    /// <summary>
    /// The number of term the mining reward is generated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    /// <summary>
    /// The amount of mining reward.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MiningRewardGenerated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MiningRewardGenerated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TermNumber != other.TermNumber) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TermNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TermNumber);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MiningRewardGenerated other) {
      if (other == null) {
        return;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class MinerReplaced : pb::IMessage<MinerReplaced>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MinerReplaced> _parser = new pb::MessageParser<MinerReplaced>(() => new MinerReplaced());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MinerReplaced> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerReplaced() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerReplaced(MinerReplaced other) : this() {
      newMinerPubkey_ = other.newMinerPubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MinerReplaced Clone() {
      return new MinerReplaced(this);
    }

    /// <summary>Field number for the "new_miner_pubkey" field.</summary>
    public const int NewMinerPubkeyFieldNumber = 1;
    private string newMinerPubkey_ = "";
    /// <summary>
    /// The new miner public key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewMinerPubkey {
      get { return newMinerPubkey_; }
      set {
        newMinerPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MinerReplaced);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MinerReplaced other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewMinerPubkey != other.NewMinerPubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NewMinerPubkey.Length != 0) hash ^= NewMinerPubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewMinerPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewMinerPubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewMinerPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewMinerPubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NewMinerPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewMinerPubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MinerReplaced other) {
      if (other == null) {
        return;
      }
      if (other.NewMinerPubkey.Length != 0) {
        NewMinerPubkey = other.NewMinerPubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewMinerPubkey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NewMinerPubkey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  internal sealed partial class RecordCandidateReplacementInput : pb::IMessage<RecordCandidateReplacementInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RecordCandidateReplacementInput> _parser = new pb::MessageParser<RecordCandidateReplacementInput>(() => new RecordCandidateReplacementInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RecordCandidateReplacementInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecordCandidateReplacementInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecordCandidateReplacementInput(RecordCandidateReplacementInput other) : this() {
      oldPubkey_ = other.oldPubkey_;
      newPubkey_ = other.newPubkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RecordCandidateReplacementInput Clone() {
      return new RecordCandidateReplacementInput(this);
    }

    /// <summary>Field number for the "old_pubkey" field.</summary>
    public const int OldPubkeyFieldNumber = 1;
    private string oldPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OldPubkey {
      get { return oldPubkey_; }
      set {
        oldPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_pubkey" field.</summary>
    public const int NewPubkeyFieldNumber = 2;
    private string newPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewPubkey {
      get { return newPubkey_; }
      set {
        newPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RecordCandidateReplacementInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RecordCandidateReplacementInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OldPubkey != other.OldPubkey) return false;
      if (NewPubkey != other.NewPubkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (OldPubkey.Length != 0) hash ^= OldPubkey.GetHashCode();
      if (NewPubkey.Length != 0) hash ^= NewPubkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (OldPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OldPubkey);
      }
      if (NewPubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewPubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (OldPubkey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OldPubkey);
      }
      if (NewPubkey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NewPubkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (OldPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OldPubkey);
      }
      if (NewPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewPubkey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RecordCandidateReplacementInput other) {
      if (other == null) {
        return;
      }
      if (other.OldPubkey.Length != 0) {
        OldPubkey = other.OldPubkey;
      }
      if (other.NewPubkey.Length != 0) {
        NewPubkey = other.NewPubkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OldPubkey = input.ReadString();
            break;
          }
          case 18: {
            NewPubkey = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            OldPubkey = input.ReadString();
            break;
          }
          case 18: {
            NewPubkey = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// For compatibility, it is the same as the Round with the addition of the random_number property.
  /// </summary>
  internal sealed partial class NextRoundInput : pb::IMessage<NextRoundInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NextRoundInput> _parser = new pb::MessageParser<NextRoundInput>(() => new NextRoundInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NextRoundInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextRoundInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextRoundInput(NextRoundInput other) : this() {
      roundNumber_ = other.roundNumber_;
      realTimeMinersInformation_ = other.realTimeMinersInformation_.Clone();
      mainChainMinersRoundNumber_ = other.mainChainMinersRoundNumber_;
      blockchainAge_ = other.blockchainAge_;
      extraBlockProducerOfPreviousRound_ = other.extraBlockProducerOfPreviousRound_;
      termNumber_ = other.termNumber_;
      confirmedIrreversibleBlockHeight_ = other.confirmedIrreversibleBlockHeight_;
      confirmedIrreversibleBlockRoundNumber_ = other.confirmedIrreversibleBlockRoundNumber_;
      isMinerListJustChanged_ = other.isMinerListJustChanged_;
      roundIdForValidation_ = other.roundIdForValidation_;
      randomNumber_ = other.randomNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextRoundInput Clone() {
      return new NextRoundInput(this);
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 1;
    private long roundNumber_;
    /// <summary>
    /// The round number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    /// <summary>Field number for the "real_time_miners_information" field.</summary>
    public const int RealTimeMinersInformationFieldNumber = 2;
    private static readonly pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>.Codec _map_realTimeMinersInformation_codec
        = new pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound.Parser), 18);
    private readonly pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound> realTimeMinersInformation_ = new pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>();
    /// <summary>
    /// Current miner information, miner public key -> miner information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound> RealTimeMinersInformation {
      get { return realTimeMinersInformation_; }
    }

    /// <summary>Field number for the "main_chain_miners_round_number" field.</summary>
    public const int MainChainMinersRoundNumberFieldNumber = 3;
    private long mainChainMinersRoundNumber_;
    /// <summary>
    /// The round number on the main chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MainChainMinersRoundNumber {
      get { return mainChainMinersRoundNumber_; }
      set {
        mainChainMinersRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "blockchain_age" field.</summary>
    public const int BlockchainAgeFieldNumber = 4;
    private long blockchainAge_;
    /// <summary>
    /// The time from chain start to current round (seconds).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlockchainAge {
      get { return blockchainAge_; }
      set {
        blockchainAge_ = value;
      }
    }

    /// <summary>Field number for the "extra_block_producer_of_previous_round" field.</summary>
    public const int ExtraBlockProducerOfPreviousRoundFieldNumber = 5;
    private string extraBlockProducerOfPreviousRound_ = "";
    /// <summary>
    /// The miner public key that produced the extra block in the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExtraBlockProducerOfPreviousRound {
      get { return extraBlockProducerOfPreviousRound_; }
      set {
        extraBlockProducerOfPreviousRound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 6;
    private long termNumber_;
    /// <summary>
    /// The current term number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_irreversible_block_height" field.</summary>
    public const int ConfirmedIrreversibleBlockHeightFieldNumber = 7;
    private long confirmedIrreversibleBlockHeight_;
    /// <summary>
    /// The height of the confirmed irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ConfirmedIrreversibleBlockHeight {
      get { return confirmedIrreversibleBlockHeight_; }
      set {
        confirmedIrreversibleBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_irreversible_block_round_number" field.</summary>
    public const int ConfirmedIrreversibleBlockRoundNumberFieldNumber = 8;
    private long confirmedIrreversibleBlockRoundNumber_;
    /// <summary>
    /// The round number of the confirmed irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ConfirmedIrreversibleBlockRoundNumber {
      get { return confirmedIrreversibleBlockRoundNumber_; }
      set {
        confirmedIrreversibleBlockRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "is_miner_list_just_changed" field.</summary>
    public const int IsMinerListJustChangedFieldNumber = 9;
    private bool isMinerListJustChanged_;
    /// <summary>
    /// Is miner list different from the the miner list in the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMinerListJustChanged {
      get { return isMinerListJustChanged_; }
      set {
        isMinerListJustChanged_ = value;
      }
    }

    /// <summary>Field number for the "round_id_for_validation" field.</summary>
    public const int RoundIdForValidationFieldNumber = 10;
    private long roundIdForValidation_;
    /// <summary>
    /// The round id, calculated by summing block producers’ expecting time (second).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundIdForValidation {
      get { return roundIdForValidation_; }
      set {
        roundIdForValidation_ = value;
      }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 11;
    private pb::ByteString randomNumber_ = pb::ByteString.Empty;
    /// <summary>
    /// The random number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NextRoundInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NextRoundInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundNumber != other.RoundNumber) return false;
      if (!RealTimeMinersInformation.Equals(other.RealTimeMinersInformation)) return false;
      if (MainChainMinersRoundNumber != other.MainChainMinersRoundNumber) return false;
      if (BlockchainAge != other.BlockchainAge) return false;
      if (ExtraBlockProducerOfPreviousRound != other.ExtraBlockProducerOfPreviousRound) return false;
      if (TermNumber != other.TermNumber) return false;
      if (ConfirmedIrreversibleBlockHeight != other.ConfirmedIrreversibleBlockHeight) return false;
      if (ConfirmedIrreversibleBlockRoundNumber != other.ConfirmedIrreversibleBlockRoundNumber) return false;
      if (IsMinerListJustChanged != other.IsMinerListJustChanged) return false;
      if (RoundIdForValidation != other.RoundIdForValidation) return false;
      if (RandomNumber != other.RandomNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      hash ^= RealTimeMinersInformation.GetHashCode();
      if (MainChainMinersRoundNumber != 0L) hash ^= MainChainMinersRoundNumber.GetHashCode();
      if (BlockchainAge != 0L) hash ^= BlockchainAge.GetHashCode();
      if (ExtraBlockProducerOfPreviousRound.Length != 0) hash ^= ExtraBlockProducerOfPreviousRound.GetHashCode();
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (ConfirmedIrreversibleBlockHeight != 0L) hash ^= ConfirmedIrreversibleBlockHeight.GetHashCode();
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) hash ^= ConfirmedIrreversibleBlockRoundNumber.GetHashCode();
      if (IsMinerListJustChanged != false) hash ^= IsMinerListJustChanged.GetHashCode();
      if (RoundIdForValidation != 0L) hash ^= RoundIdForValidation.GetHashCode();
      if (RandomNumber.Length != 0) hash ^= RandomNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundNumber);
      }
      realTimeMinersInformation_.WriteTo(output, _map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMinerListJustChanged);
      }
      if (RoundIdForValidation != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RoundIdForValidation);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundNumber);
      }
      realTimeMinersInformation_.WriteTo(ref output, _map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMinerListJustChanged);
      }
      if (RoundIdForValidation != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RoundIdForValidation);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      size += realTimeMinersInformation_.CalculateSize(_map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        size += 1 + 1;
      }
      if (RoundIdForValidation != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundIdForValidation);
      }
      if (RandomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RandomNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NextRoundInput other) {
      if (other == null) {
        return;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      realTimeMinersInformation_.Add(other.realTimeMinersInformation_);
      if (other.MainChainMinersRoundNumber != 0L) {
        MainChainMinersRoundNumber = other.MainChainMinersRoundNumber;
      }
      if (other.BlockchainAge != 0L) {
        BlockchainAge = other.BlockchainAge;
      }
      if (other.ExtraBlockProducerOfPreviousRound.Length != 0) {
        ExtraBlockProducerOfPreviousRound = other.ExtraBlockProducerOfPreviousRound;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.ConfirmedIrreversibleBlockHeight != 0L) {
        ConfirmedIrreversibleBlockHeight = other.ConfirmedIrreversibleBlockHeight;
      }
      if (other.ConfirmedIrreversibleBlockRoundNumber != 0L) {
        ConfirmedIrreversibleBlockRoundNumber = other.ConfirmedIrreversibleBlockRoundNumber;
      }
      if (other.IsMinerListJustChanged != false) {
        IsMinerListJustChanged = other.IsMinerListJustChanged;
      }
      if (other.RoundIdForValidation != 0L) {
        RoundIdForValidation = other.RoundIdForValidation;
      }
      if (other.RandomNumber.Length != 0) {
        RandomNumber = other.RandomNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 18: {
            realTimeMinersInformation_.AddEntriesFrom(input, _map_realTimeMinersInformation_codec);
            break;
          }
          case 24: {
            MainChainMinersRoundNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockchainAge = input.ReadInt64();
            break;
          }
          case 42: {
            ExtraBlockProducerOfPreviousRound = input.ReadString();
            break;
          }
          case 48: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 56: {
            ConfirmedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 64: {
            ConfirmedIrreversibleBlockRoundNumber = input.ReadInt64();
            break;
          }
          case 72: {
            IsMinerListJustChanged = input.ReadBool();
            break;
          }
          case 80: {
            RoundIdForValidation = input.ReadInt64();
            break;
          }
          case 90: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 18: {
            realTimeMinersInformation_.AddEntriesFrom(ref input, _map_realTimeMinersInformation_codec);
            break;
          }
          case 24: {
            MainChainMinersRoundNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockchainAge = input.ReadInt64();
            break;
          }
          case 42: {
            ExtraBlockProducerOfPreviousRound = input.ReadString();
            break;
          }
          case 48: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 56: {
            ConfirmedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 64: {
            ConfirmedIrreversibleBlockRoundNumber = input.ReadInt64();
            break;
          }
          case 72: {
            IsMinerListJustChanged = input.ReadBool();
            break;
          }
          case 80: {
            RoundIdForValidation = input.ReadInt64();
            break;
          }
          case 90: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// For compatibility, it is the same as the Round with the addition of the random_number property.
  /// </summary>
  internal sealed partial class NextTermInput : pb::IMessage<NextTermInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NextTermInput> _parser = new pb::MessageParser<NextTermInput>(() => new NextTermInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NextTermInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AElf.Contracts.Consensus.AEDPoS.AedposContractReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextTermInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextTermInput(NextTermInput other) : this() {
      roundNumber_ = other.roundNumber_;
      realTimeMinersInformation_ = other.realTimeMinersInformation_.Clone();
      mainChainMinersRoundNumber_ = other.mainChainMinersRoundNumber_;
      blockchainAge_ = other.blockchainAge_;
      extraBlockProducerOfPreviousRound_ = other.extraBlockProducerOfPreviousRound_;
      termNumber_ = other.termNumber_;
      confirmedIrreversibleBlockHeight_ = other.confirmedIrreversibleBlockHeight_;
      confirmedIrreversibleBlockRoundNumber_ = other.confirmedIrreversibleBlockRoundNumber_;
      isMinerListJustChanged_ = other.isMinerListJustChanged_;
      roundIdForValidation_ = other.roundIdForValidation_;
      randomNumber_ = other.randomNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NextTermInput Clone() {
      return new NextTermInput(this);
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 1;
    private long roundNumber_;
    /// <summary>
    /// The round number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    /// <summary>Field number for the "real_time_miners_information" field.</summary>
    public const int RealTimeMinersInformationFieldNumber = 2;
    private static readonly pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>.Codec _map_realTimeMinersInformation_codec
        = new pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound.Parser), 18);
    private readonly pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound> realTimeMinersInformation_ = new pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound>();
    /// <summary>
    /// Current miner information, miner public key -> miner information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::AElf.Contracts.Consensus.AEDPoS.MinerInRound> RealTimeMinersInformation {
      get { return realTimeMinersInformation_; }
    }

    /// <summary>Field number for the "main_chain_miners_round_number" field.</summary>
    public const int MainChainMinersRoundNumberFieldNumber = 3;
    private long mainChainMinersRoundNumber_;
    /// <summary>
    /// The round number on the main chain
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MainChainMinersRoundNumber {
      get { return mainChainMinersRoundNumber_; }
      set {
        mainChainMinersRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "blockchain_age" field.</summary>
    public const int BlockchainAgeFieldNumber = 4;
    private long blockchainAge_;
    /// <summary>
    /// The time from chain start to current round (seconds).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlockchainAge {
      get { return blockchainAge_; }
      set {
        blockchainAge_ = value;
      }
    }

    /// <summary>Field number for the "extra_block_producer_of_previous_round" field.</summary>
    public const int ExtraBlockProducerOfPreviousRoundFieldNumber = 5;
    private string extraBlockProducerOfPreviousRound_ = "";
    /// <summary>
    /// The miner public key that produced the extra block in the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExtraBlockProducerOfPreviousRound {
      get { return extraBlockProducerOfPreviousRound_; }
      set {
        extraBlockProducerOfPreviousRound_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "term_number" field.</summary>
    public const int TermNumberFieldNumber = 6;
    private long termNumber_;
    /// <summary>
    /// The current term number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TermNumber {
      get { return termNumber_; }
      set {
        termNumber_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_irreversible_block_height" field.</summary>
    public const int ConfirmedIrreversibleBlockHeightFieldNumber = 7;
    private long confirmedIrreversibleBlockHeight_;
    /// <summary>
    /// The height of the confirmed irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ConfirmedIrreversibleBlockHeight {
      get { return confirmedIrreversibleBlockHeight_; }
      set {
        confirmedIrreversibleBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_irreversible_block_round_number" field.</summary>
    public const int ConfirmedIrreversibleBlockRoundNumberFieldNumber = 8;
    private long confirmedIrreversibleBlockRoundNumber_;
    /// <summary>
    /// The round number of the confirmed irreversible block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ConfirmedIrreversibleBlockRoundNumber {
      get { return confirmedIrreversibleBlockRoundNumber_; }
      set {
        confirmedIrreversibleBlockRoundNumber_ = value;
      }
    }

    /// <summary>Field number for the "is_miner_list_just_changed" field.</summary>
    public const int IsMinerListJustChangedFieldNumber = 9;
    private bool isMinerListJustChanged_;
    /// <summary>
    /// Is miner list different from the the miner list in the previous round.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMinerListJustChanged {
      get { return isMinerListJustChanged_; }
      set {
        isMinerListJustChanged_ = value;
      }
    }

    /// <summary>Field number for the "round_id_for_validation" field.</summary>
    public const int RoundIdForValidationFieldNumber = 10;
    private long roundIdForValidation_;
    /// <summary>
    /// The round id, calculated by summing block producers’ expecting time (second).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundIdForValidation {
      get { return roundIdForValidation_; }
      set {
        roundIdForValidation_ = value;
      }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 11;
    private pb::ByteString randomNumber_ = pb::ByteString.Empty;
    /// <summary>
    /// The random number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NextTermInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NextTermInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoundNumber != other.RoundNumber) return false;
      if (!RealTimeMinersInformation.Equals(other.RealTimeMinersInformation)) return false;
      if (MainChainMinersRoundNumber != other.MainChainMinersRoundNumber) return false;
      if (BlockchainAge != other.BlockchainAge) return false;
      if (ExtraBlockProducerOfPreviousRound != other.ExtraBlockProducerOfPreviousRound) return false;
      if (TermNumber != other.TermNumber) return false;
      if (ConfirmedIrreversibleBlockHeight != other.ConfirmedIrreversibleBlockHeight) return false;
      if (ConfirmedIrreversibleBlockRoundNumber != other.ConfirmedIrreversibleBlockRoundNumber) return false;
      if (IsMinerListJustChanged != other.IsMinerListJustChanged) return false;
      if (RoundIdForValidation != other.RoundIdForValidation) return false;
      if (RandomNumber != other.RandomNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      hash ^= RealTimeMinersInformation.GetHashCode();
      if (MainChainMinersRoundNumber != 0L) hash ^= MainChainMinersRoundNumber.GetHashCode();
      if (BlockchainAge != 0L) hash ^= BlockchainAge.GetHashCode();
      if (ExtraBlockProducerOfPreviousRound.Length != 0) hash ^= ExtraBlockProducerOfPreviousRound.GetHashCode();
      if (TermNumber != 0L) hash ^= TermNumber.GetHashCode();
      if (ConfirmedIrreversibleBlockHeight != 0L) hash ^= ConfirmedIrreversibleBlockHeight.GetHashCode();
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) hash ^= ConfirmedIrreversibleBlockRoundNumber.GetHashCode();
      if (IsMinerListJustChanged != false) hash ^= IsMinerListJustChanged.GetHashCode();
      if (RoundIdForValidation != 0L) hash ^= RoundIdForValidation.GetHashCode();
      if (RandomNumber.Length != 0) hash ^= RandomNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundNumber);
      }
      realTimeMinersInformation_.WriteTo(output, _map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMinerListJustChanged);
      }
      if (RoundIdForValidation != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RoundIdForValidation);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoundNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoundNumber);
      }
      realTimeMinersInformation_.WriteTo(ref output, _map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsMinerListJustChanged);
      }
      if (RoundIdForValidation != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(RoundIdForValidation);
      }
      if (RandomNumber.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(RandomNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      size += realTimeMinersInformation_.CalculateSize(_map_realTimeMinersInformation_codec);
      if (MainChainMinersRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MainChainMinersRoundNumber);
      }
      if (BlockchainAge != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockchainAge);
      }
      if (ExtraBlockProducerOfPreviousRound.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraBlockProducerOfPreviousRound);
      }
      if (TermNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TermNumber);
      }
      if (ConfirmedIrreversibleBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfirmedIrreversibleBlockHeight);
      }
      if (ConfirmedIrreversibleBlockRoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConfirmedIrreversibleBlockRoundNumber);
      }
      if (IsMinerListJustChanged != false) {
        size += 1 + 1;
      }
      if (RoundIdForValidation != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundIdForValidation);
      }
      if (RandomNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RandomNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NextTermInput other) {
      if (other == null) {
        return;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      realTimeMinersInformation_.Add(other.realTimeMinersInformation_);
      if (other.MainChainMinersRoundNumber != 0L) {
        MainChainMinersRoundNumber = other.MainChainMinersRoundNumber;
      }
      if (other.BlockchainAge != 0L) {
        BlockchainAge = other.BlockchainAge;
      }
      if (other.ExtraBlockProducerOfPreviousRound.Length != 0) {
        ExtraBlockProducerOfPreviousRound = other.ExtraBlockProducerOfPreviousRound;
      }
      if (other.TermNumber != 0L) {
        TermNumber = other.TermNumber;
      }
      if (other.ConfirmedIrreversibleBlockHeight != 0L) {
        ConfirmedIrreversibleBlockHeight = other.ConfirmedIrreversibleBlockHeight;
      }
      if (other.ConfirmedIrreversibleBlockRoundNumber != 0L) {
        ConfirmedIrreversibleBlockRoundNumber = other.ConfirmedIrreversibleBlockRoundNumber;
      }
      if (other.IsMinerListJustChanged != false) {
        IsMinerListJustChanged = other.IsMinerListJustChanged;
      }
      if (other.RoundIdForValidation != 0L) {
        RoundIdForValidation = other.RoundIdForValidation;
      }
      if (other.RandomNumber.Length != 0) {
        RandomNumber = other.RandomNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 18: {
            realTimeMinersInformation_.AddEntriesFrom(input, _map_realTimeMinersInformation_codec);
            break;
          }
          case 24: {
            MainChainMinersRoundNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockchainAge = input.ReadInt64();
            break;
          }
          case 42: {
            ExtraBlockProducerOfPreviousRound = input.ReadString();
            break;
          }
          case 48: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 56: {
            ConfirmedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 64: {
            ConfirmedIrreversibleBlockRoundNumber = input.ReadInt64();
            break;
          }
          case 72: {
            IsMinerListJustChanged = input.ReadBool();
            break;
          }
          case 80: {
            RoundIdForValidation = input.ReadInt64();
            break;
          }
          case 90: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 18: {
            realTimeMinersInformation_.AddEntriesFrom(ref input, _map_realTimeMinersInformation_codec);
            break;
          }
          case 24: {
            MainChainMinersRoundNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockchainAge = input.ReadInt64();
            break;
          }
          case 42: {
            ExtraBlockProducerOfPreviousRound = input.ReadString();
            break;
          }
          case 48: {
            TermNumber = input.ReadInt64();
            break;
          }
          case 56: {
            ConfirmedIrreversibleBlockHeight = input.ReadInt64();
            break;
          }
          case 64: {
            ConfirmedIrreversibleBlockRoundNumber = input.ReadInt64();
            break;
          }
          case 72: {
            IsMinerListJustChanged = input.ReadBool();
            break;
          }
          case 80: {
            RoundIdForValidation = input.ReadInt64();
            break;
          }
          case 90: {
            RandomNumber = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
